[{"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\index.js":"1","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\App.js":"2","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\login.js":"4","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\register.js":"5","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\home.js":"6","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genre.js":"7","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\searchBar.js":"8","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\createPlaylist.js":"9","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\songCard.js":"10","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\admin.js":"11","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genreSongs.js":"12","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\artistSongs.js":"13","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicPlayer.js":"14","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\userplaylist.js":"15","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\playlists.js":"16","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\genreCard.js":"17","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicControls.js":"18"},{"size":631,"mtime":1681311977152,"results":"19","hashOfConfig":"20"},{"size":1127,"mtime":1682492258067,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1681311977155,"results":"22","hashOfConfig":"20"},{"size":2491,"mtime":1681973407465,"results":"23","hashOfConfig":"20"},{"size":2755,"mtime":1681311977154,"results":"24","hashOfConfig":"20"},{"size":12885,"mtime":1682589458117,"results":"25","hashOfConfig":"20"},{"size":5285,"mtime":1682504957633,"results":"26","hashOfConfig":"20"},{"size":2090,"mtime":1682483609198,"results":"27","hashOfConfig":"20"},{"size":3937,"mtime":1682571352543,"results":"28","hashOfConfig":"20"},{"size":2129,"mtime":1682577246631,"results":"29","hashOfConfig":"20"},{"size":21478,"mtime":1682487360376,"results":"30","hashOfConfig":"20"},{"size":10513,"mtime":1682590737808,"results":"31","hashOfConfig":"20"},{"size":10289,"mtime":1682590322526,"results":"32","hashOfConfig":"20"},{"size":699,"mtime":1682587999235,"results":"33","hashOfConfig":"20"},{"size":12364,"mtime":1683002958986,"results":"34","hashOfConfig":"20"},{"size":1121,"mtime":1682482422853,"results":"35","hashOfConfig":"20"},{"size":895,"mtime":1683011286135,"results":"36","hashOfConfig":"20"},{"size":900,"mtime":1682588262957,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1iegzw8",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\index.js",[],[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\App.js",["107"],[],"import Login from './login';\r\nimport Register from './register';\r\nimport Home from './home';\r\nimport Genre from './genre';\r\nimport CreatePlaylist from './createPlaylist';\r\nimport Admin from './admin';\r\nimport GenreSongs from './genreSongs';\r\nimport ArtistSongs from './artistSongs';\r\nimport UserPlaylist from './userplaylist';\r\nimport {Routes, Route} from 'react-router-dom';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login/>} /> {/*First page is login page*/}\r\n        <Route path=\"/register\" element={<Register/>} />\r\n        <Route path=\"/home\" element={<Home/>} />\r\n        <Route path=\"/genre\" element={<Genre/>} />\r\n        <Route path=\"/createPlaylist\" element={<CreatePlaylist/>} />\r\n        <Route path='/admin' element={<Admin/>}/>\r\n        <Route path='/genre/:param' element={<GenreSongs/>} />\r\n        <Route path='/artist/:param' element={<ArtistSongs/>} />\r\n        <Route path='/playlist/:name/:id' element={<UserPlaylist/>} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;",[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\login.js",["108","109"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginCSS from './login_registration.module.css';\r\nimport logo from './assets/sesh_white.png';\r\n\r\nfunction Login(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState(''); \r\n    const [passwordType, setPasswordType] = useState('password')\r\n    const [toggle, setToggle] = useState('SHOW')\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    Axios.defaults.withCredentials = true\r\n    const login = () => {\r\n        Axios.post('http://localhost:7000/login', {\r\n        username: username, \r\n        password: password\r\n        }).then((response) => {\r\n            if(response.data.admin){\r\n                navigate('/admin')\r\n            }else{\r\n                if(response.data.message){\r\n                    setLoginStatus(response.data.message);\r\n                }else{\r\n                    navigate(\"/home\")\r\n                    setLoginStatus(\"Welcome \"+response.data[0].u_name);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const togglePasswordType = () => {\r\n        if(passwordType === 'password'){\r\n            setPasswordType('text')\r\n            setToggle('HIDE')\r\n            return;\r\n        }\r\n        setPasswordType('password')\r\n        setToggle('SHOW')\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/login').then((response) => {\r\n            if(response.data.loggedIn == true){\r\n                setLoginStatus(response.data.user[0].u_name)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={loginCSS.card}>\r\n           <h1 className={loginCSS.brand}><img src={logo} />SESH</h1>\r\n           <h2>LOGIN</h2>\r\n            <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={(e)=>{\r\n                setUsername(e.target.value);\r\n            }}/>\r\n            <br />\r\n            <input type={passwordType} placeholder=\"Password\" name=\"password\" onChange={(e)=>{\r\n                setPassword(e.target.value);\r\n            }}/>\r\n            <button className={loginCSS.toggle} onClick={togglePasswordType}>{toggle}</button>\r\n            <br />\r\n            <button onClick={login}>LOGIN</button>\r\n           <p>Don't have an account? <a href='/register'>Register</a></p>\r\n\r\n            <h2>{loginStatus}</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\register.js",["110"],[],"import React,{useState} from 'react';\r\nimport Axios from 'axios';\r\nimport registrationCSS from './login_registration.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nfunction Register(){\r\nconst [username, setUsername] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst [passwordType, setPasswordType] = useState('password')\r\nconst [registerStatus, setRegisterStatus] = useState('')\r\nconst [toggle, setToggle] = useState('SHOW')\r\n\r\nconst register = () => {\r\n    Axios.post('http://localhost:7000/register', {\r\n        username: username, \r\n        email: email, \r\n        password: password\r\n    }).then((response) => {\r\n        console.log(response);\r\n        if(response.data.message){\r\n            setRegisterStatus(response.data.message);\r\n        }else{\r\n            setRegisterStatus(\"Account Create Successfully! Proceed to LOGIN\");\r\n        }\r\n    })\r\n}\r\n\r\nconst togglePasswordType = () => {\r\n    if(passwordType === 'password'){\r\n        setPasswordType('text')\r\n        setToggle('HIDE')\r\n        return;\r\n    }\r\n    setPasswordType('password')\r\n    setToggle('SHOW')\r\n}\r\n\r\nconst renderTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Length: 8 characters<br/>Must Include: Atleast 1 capital letter, 1 small letter, 1 digit and 1 *\r\n    </Tooltip>\r\n  );\r\n\r\n    return (\r\n        <div className={registrationCSS.regCard}>\r\n           <h1 className={registrationCSS.brand}><img src={logo} />SESH</h1>\r\n           <h2>REGISTER</h2>\r\n            <input type=\"text\" placeholder='Username' name=\"username\" onChange={(e)=>{\r\n                setUsername(e.target.value);\r\n            }} />\r\n            <br />\r\n            <input type=\"text\" placeholder='Email' name=\"email\" onChange={(e)=>{\r\n                setEmail(e.target.value);\r\n            }}/>\r\n            <br />\r\n            <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }}  overlay={renderTooltip} >\r\n                <input type={passwordType} placeholder='Password' name=\"password\" onChange={(e)=>{\r\n                    setPassword(e.target.value);\r\n                }}/>\r\n            </OverlayTrigger>\r\n            <button className = {registrationCSS.toggle} onClick={togglePasswordType}>{toggle}</button>\r\n            {/* <span>Length: 8 characters, Must Include: Atleast 1 capital letter, 1 small letter, 1 digit and *</span> */}\r\n            <br />\r\n            <button onClick={register}>REGISTER</button>\r\n           <p>Already have an account? <a href='/'>Login</a></p>\r\n           <h2>{registerStatus}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\home.js",["111","112","113","114"],[],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport homeCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/homeActive.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlist.png';\r\nimport SearchBar from './components/searchBar';\r\nimport SongCard from './components/songCard';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction Home (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const [images, setImages] = useState([])\r\n    const [songs, setSongs] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n    const [artists, setArtists] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n    const [currentSongImg, setCurrentSongImg] = useState('')\r\n    const [currentSongName, setCurrentSongName] = useState('')\r\n    const [currentSongArtist, setCurrentSongArtist] = useState('')\r\n    const [currentSongUrl, setCurrentSongUrl] = useState('')\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [addedStatus, setAddedStatus] = useState('')\r\n    const [isAlertShown, setIsAlertShown] = useState(false)\r\n    \r\n    // Queue\r\n    const [songQueue, setSongQueue] = useState([])\r\n    const [songImageQueue, setSongImageQueue] = useState([])\r\n    const [songNameQueue, setSongNameQueue] = useState([])\r\n    const [songArtistQueue, setSongArtistQueue] = useState([])\r\n    \r\n    const [previousSong, setPreviousSong] = useState([])\r\n    const [previousImage, setPreviousImage] = useState([])\r\n    const [previousName, setPreviousName] = useState([])\r\n    const [previousArtist, setPreviousArtist] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/home').then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setSongs(response.data.songs)\r\n                setUrls(response.data.urls)\r\n                setArtists(response.data.artists)\r\n                setGenres(response.data.genres)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n\r\n                setSongQueue(response.data.urls)\r\n                setSongImageQueue(response.data.images)\r\n                setSongNameQueue(response.data.songs)\r\n                setSongArtistQueue(response.data.artists)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    // Search Functionality\r\n    const searchArtists = artists.filter((item, index)=>artists.indexOf(item)===index)\r\n    const searchArray = searchArtists.concat(songs)\r\n\r\n    const songClicked = (e) => {\r\n        setIsShown(true);\r\n        setCurrentSongImg(e.target.src);\r\n        setCurrentSongName(e.target.dataset.title)\r\n        setCurrentSongArtist(e.target.dataset.artist)\r\n        setCurrentSongUrl(e.target.dataset.url);\r\n    }\r\n\r\n    const loadPage = (e)=>{\r\n        const clicked = e.target.innerHTML\r\n        console.log(clicked)\r\n        if(artists.includes(clicked)){\r\n            navigate(`/artist/${clicked}`)\r\n        }else if(songs.includes(clicked)){\r\n            var index = songs.indexOf(clicked)\r\n            setIsShown(true);\r\n            setCurrentSongImg(images[index]);\r\n            setCurrentSongArtist(artists[index])\r\n            setCurrentSongName(songs[index])\r\n            setCurrentSongUrl(urls[index]);\r\n        }\r\n    }\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    const addToPlaylist = (e)=>{\r\n        var song = e.target.dataset.title\r\n        var id = e.target.dataset.id\r\n\r\n            Axios.post('http://localhost:7000/addsong',{\r\n                id: id,\r\n                song: song\r\n            }).then((response)=>{\r\n                if(response.data.message){\r\n                    setIsAlertShown(true)\r\n                    setAddedStatus(response.data.message)\r\n\r\n                    setTimeout(()=>{\r\n                        setIsAlertShown(false)\r\n                    },3000)\r\n                }else{\r\n                    console.log(\"failed\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const addSongToQueue = (song)=>{\r\n        setSongQueue([song, ...songQueue]);\r\n        \r\n    }\r\n\r\n    const playNextSong = ()=>{\r\n        if(!songQueue.length){\r\n            setCurrentSongUrl(null)\r\n            return\r\n        }\r\n        const [nextSong, ...restOfQueue] = songQueue\r\n        const [nextImage, ...restOfImage] = songImageQueue\r\n        const [nextName, ...restOfName] = songNameQueue\r\n        const [nextArtist, ...restOfArtist] = songArtistQueue\r\n        setSongQueue(restOfQueue)\r\n        setSongImageQueue(restOfImage)\r\n        setSongNameQueue(restOfName)\r\n        setSongArtistQueue(restOfArtist)\r\n\r\n        setPreviousSong([...previousSong, currentSongUrl])\r\n        setPreviousImage([...previousImage, currentSongImg])\r\n        setPreviousName([...previousName, currentSongName])\r\n        setPreviousArtist([...previousArtist, currentSongArtist])\r\n\r\n        setCurrentSongUrl(nextSong)\r\n        setCurrentSongImg(nextImage)\r\n        setCurrentSongName(nextName)\r\n        setCurrentSongArtist(nextArtist)\r\n    }\r\n\r\n    const playPreviousSong = ()=>{\r\n        if(!previousSong.length){\r\n            return\r\n        }\r\n        const [lastSong, ...restOfPlayed] = previousSong.reverse()\r\n        const [lastImage, ...restOfImage] = previousImage.reverse()\r\n        const [lastName, ...restOfName] = previousName.reverse()\r\n        const [lastArtist, ...restOfArtist] = previousArtist.reverse()\r\n\r\n        setPreviousSong(restOfPlayed.reverse())\r\n        setPreviousImage(restOfImage.reverse())\r\n        setPreviousName(restOfName.reverse())\r\n        setPreviousArtist(restOfArtist.reverse())\r\n\r\n        setSongQueue([lastSong, ...songQueue])\r\n        setSongImageQueue([lastImage, ...songImageQueue])\r\n        setSongNameQueue([lastName, ...songNameQueue])\r\n        setSongArtistQueue([lastArtist, ...songArtistQueue])\r\n\r\n        setCurrentSongUrl(lastSong)\r\n        setCurrentSongImg(lastImage)\r\n        setCurrentSongName(lastName)\r\n        setCurrentSongArtist(lastArtist)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={homeCSS.main}>\r\n            <div className={homeCSS.leftPanel}>\r\n                <h1 className={homeCSS.brand}><img onClick={playNextSong} src={logo} alt='logo'/>SESH</h1>\r\n                <h2 className={homeCSS.tabName}><a className={homeCSS.active} href='/home'><img className={homeCSS.tabs} src={home} alt='home' />Home</a></h2>\r\n                <h2 className={homeCSS.tabName}><a href='/genre'><img className={homeCSS.tabs} src={genre} alt='genre'/>Genre</a></h2>\r\n                <h2 className={homeCSS.tabName}><a href='/createPlaylist'><img className={homeCSS.tabs} src={playlist} alt='create'/>Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={homeCSS.rightPanel}>\r\n                <div className={homeCSS.searchPanel}>\r\n                    <div className={homeCSS.searchPanelConents}>\r\n                        <SearchBar data={searchArray} placeholder=\"What's on your mind? Artists/Songs\" onClick={loadPage}/>\r\n                        {isAlertShown &&\r\n                            <div className={homeCSS.addedAlert}>{addedStatus}</div>\r\n                        }\r\n                        <button onClick={showOptions} className={homeCSS.logout}>{user.charAt(0)}</button>\r\n                        {clickedOptions && \r\n                            <ul className={homeCSS.userOptions}>\r\n                                <li className={homeCSS.userLogout} onClick={logout}>Logout</li>\r\n                            </ul>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div className={homeCSS.homeContentPanel}>\r\n                    \r\n                    <div className={homeCSS.welcomeText}>\r\n                        <h1 onClick={playPreviousSong}>Hello, {user}</h1>\r\n                        <p>Hope you have a good sesh!</p>\r\n                    </div>\r\n                \r\n                    <div>\r\n                        <h3 className={homeCSS.contentTitle}>Top Songs</h3>\r\n                        <Container>\r\n                            <Row >\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[0]} title={songs[0]} artist={artists[0]} genre={genres[0]} url={urls[0]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[9]} title={songs[9]} artist={artists[9]} genre={genres[9]} url={urls[9]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[16]} title={songs[16]} artist={artists[16]} genre={genres[16]} url={urls[16]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[7]} title={songs[7]} artist={artists[7]} genre={genres[7]} url={urls[7]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[11]} title={songs[11]} artist={artists[11]} genre={genres[11]} url={urls[11]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row >\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[26]} title={songs[26]} artist={artists[26]} genre={genres[26]} url={urls[26]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[34]} title={songs[34]} artist={artists[34]} genre={genres[34]} url={urls[34]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[35]} title={songs[35]} artist={artists[35]} genre={genres[35]} url={urls[35]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[21]} title={songs[21]} artist={artists[21]} genre={genres[21]} url={urls[21]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[19]} title={songs[19]} artist={artists[19]} genre={genres[19]} url={urls[19]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>                \r\n                </div>\r\n            </div>   \r\n            {isShown && \r\n              <MusicPlayer image={currentSongImg} name={currentSongName} artist={currentSongArtist} src={currentSongUrl} onEnded={playNextSong} playNext={playNextSong} playPrevious={playPreviousSong}/>\r\n            }       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;",[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genre.js",["115","116","117","118","119","120"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport genreCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menuActive.png';\r\nimport playlist from './assets/playlist.png';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport GenreCard from './components/genreCard';\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\n\r\nfunction Genre (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const [images, setImages] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/genre').then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setGenres(response.data.genres)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className={genreCSS.main}>\r\n            <div className={genreCSS.leftPanel}>\r\n                <h1 className={genreCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={genreCSS.tabName}><a href='/home'><img className={genreCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={genreCSS.tabName}><a className={genreCSS.active} href='/genre'><img className={genreCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={genreCSS.tabName}><a href='/createPlaylist'><img className={genreCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={genreCSS.rightPanel}>\r\n                <div className={genreCSS.genreSearchPanel}>\r\n                    <button onClick={showOptions} className={genreCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={genreCSS.userOptions}>\r\n                            <li className={genreCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                </div>\r\n\r\n                <div className={genreCSS.contentPanel}>\r\n                \r\n                    <div>\r\n                        <h3 className={genreCSS.contentTitle}>Browse All</h3>\r\n                        <Container>\r\n                            <Row >\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[0]} title={genres[0]} to={`/genre/${genres[0]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[1]} title={genres[1]} to={`/genre/${genres[1]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[2]} title={genres[2]} to={`/genre/${genres[2]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[3]} title={genres[3]} to={`/genre/${genres[3]}`}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row >\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[4]} title={genres[4]} to={`/genre/${genres[4]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[5]} title={genres[5]} to={`/genre/${genres[5]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[6]} title={genres[6]} to={`/genre/${genres[6]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[7]} title={genres[7]} to={`/genre/${genres[7]}`}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>                \r\n                </div>\r\n            </div>            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Genre;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\searchBar.js",["121","122","123","124","125"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\createPlaylist.js",["126","127","128","129","130","131","132"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport generalCSS from './home_genre_playlist.module.css'\r\nimport createPlaylistCSS from './createPlaylist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlistActive.png';\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction CreatePlaylist (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [playlistName, setPlaylistName] = useState('')\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/createPlaylist').then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    const createPlaylist = () => {\r\n        Axios.post('http://localhost:7000/createplaylist',{\r\n            user: user,\r\n            plname: playlistName\r\n        }).then((response) => {\r\n            if(response.data.id){\r\n                navigate(`/playlist/${playlistName}/${response.data.id}`)\r\n            }else{\r\n                console.log(response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={generalCSS.main}>\r\n            <div className={generalCSS.leftPanel}>\r\n                <h1 className={generalCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={generalCSS.tabName}><a href='/home'><img className={generalCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={generalCSS.tabName}><a href='/genre'><img className={generalCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={generalCSS.tabName}><a className={generalCSS.active} href='/createPlaylist'><img className={generalCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={generalCSS.rightPanel}>\r\n                <div className={generalCSS.createPlaylistSearchPanel}>\r\n                    <button onClick={showOptions} className={generalCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={generalCSS.userOptions}>\r\n                            <li className={generalCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                    <br/>\r\n                    <h1 className={generalCSS.heading}>Create Playlist</h1>\r\n                </div>\r\n\r\n                <div className={generalCSS.createPlaylistContentPanel}>\r\n                    <div className={generalCSS.createPlaylist}>\r\n                        <h2>Enter Playlist Name</h2>\r\n                        <br/>\r\n                        <input type=\"text\" placeholder='playlist name' onChange={(e)=>{\r\n                                setPlaylistName(e.target.value);\r\n                        }} /><br/>\r\n                        <button className={generalCSS.createPlaylistButton} onClick={createPlaylist}>Create</button>\r\n                    </div> \r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePlaylist;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\songCard.js",["133"],[],"import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport songCardCSS from '../home_genre_playlist.module.css';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction SongCard (props) {\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [isShown, setIsShown] = useState(false);\r\n\r\n    var data = props.playlists\r\n    var ids = props.ids\r\n\r\n    var finalData = []\r\n    const showOptions = ()=>{\r\n        setIsShown(!isShown)\r\n        if(data.length>0){\r\n            for(var i=0;i<data.length;i++){\r\n                finalData.push({\r\n                    name: data[i],\r\n                    id: ids[i]\r\n                })\r\n            }\r\n        }else{\r\n            finalData.push({\r\n                name: 'No Playlists'\r\n            })\r\n        }\r\n        setPlaylists(finalData)\r\n    }\r\n\r\n    return (\r\n        <Link to={props.to}>\r\n        <Card className={songCardCSS.card} onContextMenu={props.onContextMenu} style={{ width: '14rem' }}>\r\n\r\n        <div className={songCardCSS.songOptions} onClick={showOptions}><div class={songCardCSS.threeDots}></div></div>\r\n        {isShown &&\r\n            <ul className={songCardCSS.listPlaylist}>\r\n                <div className={songCardCSS.optionHeading}>Add to playlist</div>\r\n                    {playlists.map(item=>{\r\n                        return (\r\n                            <li className={songCardCSS.listItem} key={item.data} value={item.data} onClick={props.addToPlaylist} data-id = {item.id} data-title={props.title} >{item.name}</li>\r\n                        )\r\n                    })}\r\n            </ul>\r\n        }\r\n\r\n            <Card.Img variant=\"top\" src={props.img} className={songCardCSS.cardImg} onClick={props.onClick} data-title={props.title} data-artist={props.artist} data-url={props.url}/>\r\n            <Card.Body>\r\n                <Card.Title>{props.title}</Card.Title>\r\n                <Card.Text>\r\n                    <p>{props.artist}</p>\r\n                    <p>{props.genre}</p>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    </Link>\r\n    )\r\n}\r\n\r\nexport default SongCard;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\admin.js",["134","135","136","137","138","139","140","141","142","143"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport adminCSS from './admin.module.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Admin(){\r\n    const [table, setTable] = useState('');\r\n    \r\n    const [operation, setOperation] = useState('')\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const [artistID, setArtistID] = useState('')\r\n    const [artistName, setArtistName] = useState('');\r\n    const [artistImage, setArtistImage] = useState(''); \r\n    const [artistOperationStatus, setArtistOperationStatus] = useState('')\r\n    // For Show\r\n    const [aID, setAID] = useState('')\r\n    const [aName, setAName] = useState('')\r\n    const [aImg, setAImg] = useState('')\r\n\r\n    const [genreName, setGenreName] = useState('');\r\n    const [genreImage, setGenreImage] = useState('');\r\n    const [genreID, setGenreID] = useState('')\r\n    const [genreOperationStatus, setGenreOperationStatus] = useState('')\r\n    // For Show\r\n    const [gID, setGID] = useState('')\r\n    const [gName, setGName] = useState('')\r\n    const [gImg, setGImg] = useState('')\r\n\r\n    const [songID, setSongID] = useState('')\r\n    const [songName, setSongName] = useState('');\r\n    const [songImage, setSongImage] = useState('');\r\n    const [songUrl, setSongUrl] = useState('');\r\n    const [songGenreID, setSongGenreID] = useState('');\r\n    const [songArtistID, setSongArtistID] = useState('');\r\n    const [songOperationStatus, setSongOperationStatus] = useState('')\r\n    // For Show\r\n    const [sID, setSID] = useState('')\r\n    const [sName, setSName] = useState('')\r\n    const [sImg, setSImg] = useState('')\r\n    const [sUrl, setSUrl] = useState('')\r\n    const [sGenreID, setSGenreID] = useState('')\r\n    const [sArtistID, setSArtistID] = useState('')\r\n\r\n    const navigate = useNavigate();\r\n    Axios.defaults.withCredentials = true\r\n    // ARTIST FUNCTIONS\r\n    const addArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName, \r\n        artistImage: artistImage\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName, \r\n        artistImage: artistImage\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showArtist = (e) => {\r\n        Axios.post('http://localhost:7000/showartist').then((response) => {\r\n                setAID(response.data.artistID)\r\n                setAName(response.data.artistName)\r\n                setAImg(response.data.artistImage)\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const artistData = [];\r\n    for(var i=0;i<aID.length;i++){\r\n        artistData.push({\r\n            id: aID[i],\r\n            name: aName[i],\r\n            image: aImg[i],\r\n        }\r\n        )\r\n    }    \r\n\r\n    // GENRE FUNCTIONS\r\n    const addGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName, \r\n        genreImage: genreImage\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName, \r\n        genreImage: genreImage\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showGenre = () => {\r\n        Axios.post('http://localhost:7000/showgenre').then((response) => {\r\n            setGID(response.data.genreID)\r\n            setGName(response.data.genreName)\r\n            setGImg(response.data.genreImage)\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const genreData = [];\r\n    for(var i=0;i<gID.length;i++){\r\n        genreData.push({\r\n            id: gID[i],\r\n            name: gName[i],\r\n            image: gImg[i],\r\n        }\r\n        )\r\n    }\r\n\r\n    // SONG FUNCTIONS\r\n    const addSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName, \r\n        songImage: songImage,\r\n        songUrl: songUrl,\r\n        songGenreID: songGenreID,\r\n        songArtistID: songArtistID\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName, \r\n        songImage: songImage,\r\n        songUrl: songUrl\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showSong = () => {\r\n        Axios.post('http://localhost:7000/showsong').then((response) => {\r\n            setSID(response.data.songID)\r\n            setSName(response.data.songName)\r\n            setSImg(response.data.songImage)\r\n            setSUrl(response.data.songUrl)\r\n            setSGenreID(response.data.songGenreID)\r\n            setSArtistID(response.data.songArtistID)\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const songData = [];\r\n    for(var i=0;i<sID.length;i++){\r\n        songData.push({\r\n            id: sID[i],\r\n            name: sName[i],\r\n            image: sImg[i],\r\n            url: sUrl[i],\r\n            genreid: sGenreID[i],\r\n            artistid: sArtistID[i]\r\n        }\r\n        )\r\n    }\r\n\r\n    // Logout Function\r\n    const logout = () => {\r\n        setLoginStatus(false)\r\n        Axios.post('http://localhost:7000/admin', {\r\n            admin: loginStatus\r\n        })\r\n        navigate(\"/\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/admin').then((response) => {\r\n            if(response.data.admin === true){\r\n                console.log(\"Admin\")\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className={adminCSS.main}>\r\n         <div className={adminCSS.logout}>\r\n            <h1 className={adminCSS.title}>ADMIN</h1>\r\n            <button onClick={logout}>Logout</button>\r\n         </div>\r\n         <Container>\r\n            \r\n            <Row>\r\n            <h1>Artist</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Add:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <input type='text' placeholder='name' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}/><br/>\r\n                            <label>Artist Image URL:</label>\r\n                            <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                            setArtistImage(e.target.value);\r\n                            }}/><br/>\r\n                            <button onClick={addArtist}>Add Artist</button>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Update:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <select name='select' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}>\r\n                                    {artistData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select><br/>\r\n                            <label>Artist Image URL:</label>\r\n                            <input type='text' placeholder='new image-url' onChange={(e)=>{\r\n                            setArtistImage(e.target.value);\r\n                            }}/><br/>\r\n                            <button onClick={updateArtist}>Update Artist Image</button>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Delete:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <br/>\r\n                            <select name='select' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}>\r\n                                    {artistData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select>\r\n                            <br/>\r\n                            <button onClick={deleteArtist}>Delete Artist</button>\r\n                    </div>\r\n                </Col>\r\n                <h2>{artistOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button name='button' onClick={showArtist}>Show Artist Table</button>\r\n                        <table className={adminCSS.admTable}>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                            </tr>\r\n                            {artistData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n                <hr/>\r\n            </Row>\r\n            \r\n            <br/>\r\n            \r\n            <Row>\r\n            <br/>\r\n            <h1>Genre</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <h2>Add:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <input type='text' placeholder='name' onChange={(e)=>{\r\n                    setGenreName(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Genre Image URL:</label>\r\n                    <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                    setGenreImage(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={addGenre}>Add Genre</button>\r\n                    <br/><br/>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Update:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setGenreName(e.target.value);\r\n                            }}>\r\n                                    {genreData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                    </select><br/>\r\n                    <label>Genre Image URL:</label>\r\n                    <input type='text' placeholder='new genre image-url' onChange={(e)=>{\r\n                    setGenreImage(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={updateGenre}>Update Genre Image</button>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Delete:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <br/>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setGenreName(e.target.value);\r\n                            }}>\r\n                                    {genreData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select><br/>\r\n                    <button onClick={deleteGenre}>Delete Genre</button>\r\n                </Col>\r\n                <h2>{genreOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button onClick={showGenre}>Show Genre Table</button>\r\n                        <table>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                            </tr>\r\n                            {genreData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n                <hr/>\r\n            </Row>\r\n\r\n            <br/>\r\n            \r\n            <Row>\r\n            <br/>\r\n            <h1>Song</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <h2>Add:</h2>\r\n                    <label>Song Name:</label>\r\n                    <input type='text' placeholder='name' onChange={(e)=>{\r\n                    setSongName(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song Image URL:</label>\r\n                    <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                    setSongImage(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song URL:</label>\r\n                    <br/>\r\n                    <input type='text' placeholder='song-url' onChange={(e)=>{\r\n                    setSongUrl(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Genre ID:</label>\r\n                    <br/>\r\n                    <input type='number' placeholder='genre id' onChange={(e)=>{\r\n                    setSongGenreID(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Artist ID:</label>\r\n                    <br/>\r\n                    <input type='number' placeholder='artist id' onChange={(e)=>{\r\n                    setSongArtistID(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={addSong}>Add Song</button>\r\n                    <br/><br/>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Update:</h2>\r\n                    <label>Song Name:</label>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setSongName(e.target.value);\r\n                            }}>\r\n                            {songData.map(item=>{\r\n                                return(\r\n                                    <option key={item.id} value={item.name}>{item.name}</option>\r\n                                )\r\n                            })}\r\n                    </select><br/>\r\n                    <label>Song Image URL:</label>\r\n                    <input type='text' placeholder='new image-url' onChange={(e)=>{\r\n                    setSongImage(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song URL:</label>\r\n                    <br/>\r\n                    <input type='text' placeholder='new song-url' onChange={(e)=>{\r\n                    setSongUrl(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={updateSong}>Update Song Image</button>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Delete:</h2>\r\n                    <label>Song Name:</label>\r\n                    <br/>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setSongName(e.target.value);\r\n                            }}>\r\n                            {songData.map(item=>{\r\n                                return(\r\n                                    <option key={item.id} value={item.name}>{item.name}</option>\r\n                                )\r\n                            })}\r\n                    </select><br/>\r\n                    <button onClick={deleteSong}>Delete Song</button>\r\n                </Col>\r\n                <h2>{songOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button onClick={showSong}>Show Songs Table</button>\r\n                        <table>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                                <th>Url</th>\r\n                                <th>Genre ID</th>\r\n                                <th>Artist ID</th>\r\n                            </tr>\r\n                            {songData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                        <td>{val.url}</td>\r\n                                        <td>{val.genreid}</td>\r\n                                        <td>{val.artistid}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n         </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Admin;\r\n // var grid;\r\n                // var columns = [\r\n                //     {id: \"#\", name: \"#\", field: \"no\"},\r\n                //     {id: \"song\", name: \"Song\", field: \"song\"},\r\n                //     {id: \"artist\", name: \"Artist\", field: \"artist\"}\r\n                // ];\r\n\r\n                // var options = {\r\n                //     enableCellNavigation: true,\r\n                //     enableColumnReorder: false\r\n                // };\r\n\r\n                // console.log(songs)\r\n                // function s() {\r\n                //     var data = [];\r\n                //     for (var i = 0; i < 8; i++) {\r\n                //         data[i] = {\r\n                //             no: (i+1),\r\n                //             song: \"song \"+(i+1),\r\n                //             artist: \"artist \"+ (i+1)\r\n                //         };\r\n                //     }\r\n\r\n                //     grid = new Slick.Grid(\"#myGrid\", data, columns, options);\r\n                // }\r\n\r\n                // s();\r\n\r\n                {/* <table width=\"100%\">\r\n                        <tr>\r\n                            <td valign=\"top\" width=\"50%\">\r\n                                <div id=\"myGrid\"></div>\r\n                            </td>\r\n                        </tr>\r\n                    </table> */}","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genreSongs.js",["144","145","146","147","148","149","150","151","152","153","154","155"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport genreSongsCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlistActive.png';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction GenreSongs (){\r\n    var iniData = []\r\n    var dataX = []\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const {param} = useParams();\r\n    const [images, setImages] = useState([])\r\n    const [songs, setSongs] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n    const [artists, setArtists] = useState([])\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n    const [genreImg, setGenreImg] = useState('')\r\n    const [currentSongImg, setCurrentSongImg] = useState()\r\n    const [currentSongName, setCurrentSongName] = useState('')\r\n    const [currentSongUrl, setCurrentSongUrl] = useState('')\r\n    const [currentSongArtist, setCurrentSongArtist] = useState('')\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [asc, setAsc] = useState(true)\r\n\r\n    // Queue\r\n    const [songQueue, setSongQueue] = useState([])\r\n    const [songImageQueue, setSongImageQueue] = useState([])\r\n    const [songNameQueue, setSongNameQueue] = useState([])\r\n    const [songArtistQueue, setSongArtistQueue] = useState([])\r\n    \r\n    const [previousSong, setPreviousSong] = useState([])\r\n    const [previousImage, setPreviousImage] = useState([])\r\n    const [previousName, setPreviousName] = useState([])\r\n    const [previousArtist, setPreviousArtist] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n\r\n        Axios.get(`http://localhost:7000/genre/${param}`).then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setSongs(response.data.songs)\r\n                setUrls(response.data.urls)\r\n                setArtists(response.data.artists)\r\n                setGenreImg(response.data.genreImg)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n\r\n                setSongQueue(response.data.urls)\r\n                setSongImageQueue(response.data.images)\r\n                setSongNameQueue(response.data.songs)\r\n                setSongArtistQueue(response.data.artists)\r\n\r\n                for(var i=0;i<response.data.images.length;i++){\r\n                    iniData.push({\r\n                        no: (i+1),\r\n                        img: response.data.images[i],\r\n                        song: response.data.songs[i],\r\n                        url: response.data.urls[i],\r\n                        artist: response.data.artists[i],\r\n                    }\r\n                    )\r\n                }\r\n                for(var i=0;i<iniData.length/2;i++){\r\n                    dataX[i] = iniData[i] \r\n                }\r\n                setData(dataX)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n        for(var i=0;i<images.length;i++){\r\n            dataX.push({\r\n                no: (i+1),\r\n                img: images[i],\r\n                song: songs[i],\r\n                url: urls[i],\r\n                artist: artists[i],\r\n            }\r\n            )\r\n        }\r\n\r\n    const sortS = ()=>{\r\n        var i=0,j\r\n        setAsc(!asc)\r\n\r\n        if(asc === true){\r\n            while(i<dataX.length){\r\n                j=i+1\r\n                while(j<dataX.length){\r\n                    if(dataX[j].song>dataX[i].song){\r\n                        var temp = dataX[i]\r\n                        dataX[i] = dataX[j]\r\n                        dataX[j] = temp\r\n                    }\r\n                    j++\r\n                }\r\n                i++\r\n            }\r\n        }else if(asc === false){\r\n            while(i<dataX.length){\r\n                j=i+1\r\n                while(j<dataX.length){\r\n                    if(dataX[j].song<dataX[i].song){\r\n                        var temp = dataX[i]\r\n                        dataX[i] = dataX[j]\r\n                        dataX[j] = temp\r\n                    }\r\n                    j++\r\n                }\r\n                i++\r\n            }\r\n        }\r\n        setData(dataX)\r\n    }\r\n\r\n    const songClicked = (e) => {\r\n        setIsShown(true);\r\n        setCurrentSongImg(e.target.dataset.img);\r\n        setCurrentSongName(e.target.dataset.name)\r\n        setCurrentSongArtist(e.target.dataset.artist)\r\n        setCurrentSongUrl(e.target.dataset.url);\r\n    }\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    const addSongToQueue = (song)=>{\r\n        setSongQueue([song, ...songQueue]);\r\n        \r\n    }\r\n\r\n    const playNextSong = ()=>{\r\n        if(!songQueue.length){\r\n            setCurrentSongUrl(null)\r\n            return\r\n        }\r\n        const [nextSong, ...restOfQueue] = songQueue\r\n        const [nextImage, ...restOfImage] = songImageQueue\r\n        const [nextName, ...restOfName] = songNameQueue\r\n        const [nextArtist, ...restOfArtist] = songArtistQueue\r\n        setSongQueue(restOfQueue)\r\n        setSongImageQueue(restOfImage)\r\n        setSongNameQueue(restOfName)\r\n        setSongArtistQueue(restOfArtist)\r\n\r\n        setPreviousSong([...previousSong, currentSongUrl])\r\n        setPreviousImage([...previousImage, currentSongImg])\r\n        setPreviousName([...previousName, currentSongName])\r\n        setPreviousArtist([...previousArtist, currentSongArtist])\r\n\r\n        setCurrentSongUrl(nextSong)\r\n        setCurrentSongImg(nextImage)\r\n        setCurrentSongName(nextName)\r\n        setCurrentSongArtist(nextArtist)\r\n    }\r\n\r\n    const playPreviousSong = ()=>{\r\n        if(!previousSong.length){\r\n            return\r\n        }\r\n        const [lastSong, ...restOfPlayed] = previousSong.reverse()\r\n        const [lastImage, ...restOfImage] = previousImage.reverse()\r\n        const [lastName, ...restOfName] = previousName.reverse()\r\n        const [lastArtist, ...restOfArtist] = previousArtist.reverse()\r\n\r\n        setPreviousSong(restOfPlayed.reverse())\r\n        setPreviousImage(restOfImage.reverse())\r\n        setPreviousName(restOfName.reverse())\r\n        setPreviousArtist(restOfArtist.reverse())\r\n\r\n        setSongQueue([lastSong, ...songQueue])\r\n        setSongImageQueue([lastImage, ...songImageQueue])\r\n        setSongNameQueue([lastName, ...songNameQueue])\r\n        setSongArtistQueue([lastArtist, ...songArtistQueue])\r\n\r\n        setCurrentSongUrl(lastSong)\r\n        setCurrentSongImg(lastImage)\r\n        setCurrentSongName(lastName)\r\n        setCurrentSongArtist(lastArtist)\r\n    }\r\n\r\n    return (\r\n        <div className={genreSongsCSS.main}>\r\n            <div className={genreSongsCSS.leftPanel}>\r\n                <h1 className={genreSongsCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/home'><img className={genreSongsCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/genre'><img className={genreSongsCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/createPlaylist'><img className={genreSongsCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={genreSongsCSS.rightPanel}>\r\n                <div className={genreSongsCSS.createPlaylistSearchPanel}>\r\n                    <button onClick={showOptions} className={genreSongsCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={genreSongsCSS.userOptions}>\r\n                            <li className={genreSongsCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                    <br/>\r\n                    <div className={genreSongsCSS.titleDetails}>\r\n                        <img className={genreSongsCSS.artist_genreImg} src={genreImg}/>\r\n                        <h2 className={genreSongsCSS.artist_genreName}>{param}</h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={genreSongsCSS.createPlaylistContentPanel}>\r\n\r\n                    <table>\r\n                        <tr className={genreSongsCSS.songsHeader}>\r\n                            \r\n                            <th className={genreSongsCSS.no}>#</th>\r\n                            <th>Image</th>\r\n                            <th onClick={sortS}>Song</th>\r\n                            <th>Artist</th>\r\n                            <img className={genreSongsCSS.playSong} src={playlist}/>\r\n                        </tr>\r\n                        {data.map((val,key)=>{\r\n                            return(\r\n                                <tr className={genreSongsCSS.songRow} key={key} data-img={val.img} data-artist={val.artist} data-name={val.song} data-url={val.url} onClick={songClicked}>\r\n                                        <td className={genreSongsCSS.no}>{val.no}</td>\r\n                                        <td><img className={genreSongsCSS.tableImg} src={val.img} /></td>\r\n                                        <td>{val.song}</td>\r\n                                        <td>{val.artist}</td>\r\n                                        <img className={genreSongsCSS.playSong} src={playlist} />     \r\n                                </tr>\r\n                            )\r\n                        })\r\n                        }\r\n                    </table>\r\n\r\n                    \r\n                </div>\r\n            </div>  \r\n            {isShown && \r\n                <MusicPlayer image={currentSongImg} name={currentSongName} artist={currentSongArtist} src={currentSongUrl} onEnded={playNextSong} playNext={playNextSong} playPrevious={playPreviousSong}/>\r\n           \r\n            }          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreSongs;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\artistSongs.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport artistSongsCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlistActive.png';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction ArtistSongs (){\r\n    var iniData = []\r\n    var dataX = []\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const {param} = useParams();\r\n    const [images, setImages] = useState([])\r\n    const [songs, setSongs] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n    const [artistImg, setArtistImg] = useState('')\r\n    const [currentSongImg, setCurrentSongImg] = useState()\r\n    const [currentSongName, setCurrentSongName] = useState('')\r\n    const [currentSongUrl, setCurrentSongUrl] = useState('')\r\n    const [currentSongArtist, setCurrentSongArtist] = useState('')\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [asc, setAsc] = useState(true)\r\n\r\n    // Queue\r\n    const [songQueue, setSongQueue] = useState([])\r\n    const [songImageQueue, setSongImageQueue] = useState([])\r\n    const [songNameQueue, setSongNameQueue] = useState([])\r\n    const [songArtistQueue, setSongArtistQueue] = useState([])\r\n    \r\n    const [previousSong, setPreviousSong] = useState([])\r\n    const [previousImage, setPreviousImage] = useState([])\r\n    const [previousName, setPreviousName] = useState([])\r\n    const [previousArtist, setPreviousArtist] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:7000/artist/${param}`).then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setSongs(response.data.songs)\r\n                setUrls(response.data.urls)\r\n                setGenres(response.data.genres)\r\n                setArtistImg(response.data.artistImg)\r\n                setCurrentSongArtist(param)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n\r\n                setSongQueue(response.data.urls)\r\n                setSongImageQueue(response.data.images)\r\n                setSongNameQueue(response.data.songs)\r\n                setSongArtistQueue([{param}])\r\n\r\n                for(var i=0;i<response.data.images.length;i++){\r\n                    iniData.push({\r\n                        no: (i+1),\r\n                        img: response.data.images[i],\r\n                        song: response.data.songs[i],\r\n                        url: response.data.urls[i],\r\n                        genre: response.data.genres[i],\r\n                    }\r\n                    )\r\n                }\r\n                for(var i=0;i<iniData.length/2;i++){\r\n                    dataX[i] = iniData[i] \r\n                }\r\n                setData(dataX)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    for(var i=0;i<images.length;i++){\r\n        dataX.push({\r\n            no: (i+1),\r\n            img: images[i],\r\n            song: songs[i],\r\n            url: urls[i],\r\n            genre: genres[i],\r\n        }\r\n        )\r\n    }\r\n\r\n    const sort = ()=>{\r\n        var i=0,j\r\n        setAsc(!asc)\r\n\r\n        if(asc === true){\r\n            while(i<dataX.length){\r\n                j=i+1\r\n                while(j<dataX.length){\r\n                    if(dataX[j].song>dataX[i].song){\r\n                        var temp = dataX[i]\r\n                        dataX[i] = dataX[j]\r\n                        dataX[j] = temp\r\n                    }\r\n                    j++\r\n                }\r\n                i++\r\n            }\r\n        }else if(asc === false){\r\n            while(i<dataX.length){\r\n                j=i+1\r\n                while(j<dataX.length){\r\n                    if(dataX[j].song<dataX[i].song){\r\n                        var temp = dataX[i]\r\n                        dataX[i] = dataX[j]\r\n                        dataX[j] = temp\r\n                    }\r\n                    j++\r\n                }\r\n                i++\r\n            }\r\n        }\r\n        setData(dataX)\r\n    }\r\n\r\n    const songClicked = (e) => {\r\n        setIsShown(true);\r\n        setCurrentSongImg(e.target.dataset.img);\r\n        setCurrentSongName(e.target.dataset.name)\r\n        setCurrentSongUrl(e.target.dataset.url);\r\n    }\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    const addSongToQueue = (song)=>{\r\n        setSongQueue([song, ...songQueue]);\r\n        \r\n    }\r\n\r\n    const playNextSong = ()=>{\r\n        if(!songQueue.length){\r\n            setCurrentSongUrl(null)\r\n            return\r\n        }\r\n        const [nextSong, ...restOfQueue] = songQueue\r\n        const [nextImage, ...restOfImage] = songImageQueue\r\n        const [nextName, ...restOfName] = songNameQueue\r\n        setSongQueue(restOfQueue)\r\n        setSongImageQueue(restOfImage)\r\n        setSongNameQueue(restOfName)\r\n\r\n        setPreviousSong([...previousSong, currentSongUrl])\r\n        setPreviousImage([...previousImage, currentSongImg])\r\n        setPreviousName([...previousName, currentSongName])\r\n\r\n        setCurrentSongUrl(nextSong)\r\n        setCurrentSongImg(nextImage)\r\n        setCurrentSongName(nextName)\r\n    }\r\n\r\n    const playPreviousSong = ()=>{\r\n        if(!previousSong.length){\r\n            return\r\n        }\r\n        const [lastSong, ...restOfPlayed] = previousSong.reverse()\r\n        const [lastImage, ...restOfImage] = previousImage.reverse()\r\n        const [lastName, ...restOfName] = previousName.reverse()\r\n\r\n        setPreviousSong(restOfPlayed.reverse())\r\n        setPreviousImage(restOfImage.reverse())\r\n        setPreviousName(restOfName.reverse())\r\n\r\n        setSongQueue([lastSong, ...songQueue])\r\n        setSongImageQueue([lastImage, ...songImageQueue])\r\n        setSongNameQueue([lastName, ...songNameQueue])\r\n\r\n        setCurrentSongUrl(lastSong)\r\n        setCurrentSongImg(lastImage)\r\n        setCurrentSongName(lastName)\r\n    }\r\n\r\n    return (\r\n        <div className={artistSongsCSS.main}>\r\n            <div className={artistSongsCSS.leftPanel}>\r\n                <h1 className={artistSongsCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={artistSongsCSS.tabName}><a href='/home'><img className={artistSongsCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={artistSongsCSS.tabName}><a href='/genre'><img className={artistSongsCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={artistSongsCSS.tabName}><a href='/createPlaylist'><img className={artistSongsCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={artistSongsCSS.rightPanel}>\r\n                <div className={artistSongsCSS.createPlaylistSearchPanel}>\r\n                    <button onClick={showOptions} className={artistSongsCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={artistSongsCSS.userOptions}>\r\n                            <li className={artistSongsCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                    <br/>\r\n                    <div className={artistSongsCSS.titleDetails}>\r\n                        <img className={artistSongsCSS.artist_genreImg} src={artistImg}/>\r\n                        <h2 className={artistSongsCSS.artist_genreName}>{param}</h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={artistSongsCSS.createPlaylistContentPanel}>\r\n                <table>\r\n                        <tr className={artistSongsCSS.songsHeader}>\r\n                            \r\n                            <th className={artistSongsCSS.no}>#</th>\r\n                            <th>Image</th>\r\n                            <th onClick={sort} >Song</th>\r\n                            <th>Genre</th>\r\n                            <img className={artistSongsCSS.playSong} src={playlist}/>\r\n                        </tr>\r\n                        {data.map((val,key)=>{\r\n                            return(\r\n                                <tr className={artistSongsCSS.songRow} key={key} data-img={val.img} data-name={val.song} data-url={val.url} onClick={songClicked} >\r\n                                        <td className={artistSongsCSS.no} data-img={val.img} data-name={val.song} data-url={val.url} onClick={songClicked}>{val.no}</td>\r\n                                        <td data-img={val.img} data-name={val.song} data-url={val.url} onClick={songClicked}><img className={artistSongsCSS.tableImg} src={val.img} /></td>\r\n                                        <td data-img={val.img} data-name={val.song} data-url={val.url} onClick={songClicked}>{val.song}</td>\r\n                                        <td data-img={val.img} data-name={val.song} data-url={val.url} onClick={songClicked}>{val.genre}</td>\r\n                                        <img className={artistSongsCSS.playSong} src={playlist} />     \r\n                                </tr>\r\n                            )\r\n                        })\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>     \r\n            {isShown && \r\n                <MusicPlayer image={currentSongImg} name={currentSongName} artist={currentSongArtist} src={currentSongUrl} onEnded={playNextSong} playNext={playNextSong} playPrevious={playPreviousSong}/>\r\n            }        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistSongs;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicPlayer.js",["171","172"],[],"import React, { useEffect, useState } from 'react';\r\nimport musicPlayerCSS from '../home_genre_playlist.module.css';\r\nimport MusicControls from './musicControls';\r\n\r\nfunction MusicPlayer (props) {\r\n\r\n    return (\r\n        \r\n                <div className={musicPlayerCSS.audioBar}>\r\n                    <MusicControls image={props.image} name={props.name} artist={props.artist} playNext={props.playNext} playPrevious={props.playPrevious}/>\r\n                    <div className={musicPlayerCSS.audio}>\r\n                        <audio src = {props.src} onEnded={props.onEnded} autoPlay controls/>\r\n                    </div>\r\n                </div>\r\n           \r\n    )\r\n}\r\n\r\nexport default MusicPlayer;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\userplaylist.js",["173","174","175","176","177","178","179","180","181","182","183"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\playlists.js",["184","185","186"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\genreCard.js",["187","188"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicControls.js",["189","190","191","192","193"],[],"import React, { useEffect, useState } from 'react';\r\nimport musicControlsCSS from '../home_genre_playlist.module.css';\r\nimport nextTrack from '../assets/nextTrack.png'\r\nimport previousTrack from '../assets/previousTrack.png'\r\n\r\nfunction MusicControls (props) {\r\n\r\n    return (\r\n        <div className={musicControlsCSS.musicControls}>\r\n                <img className={musicControlsCSS.currentSongImg} src={props.image}/>\r\n                <span className={musicControlsCSS.currentSongName}>{props.name}</span>\r\n                <br/>\r\n                <span className={musicControlsCSS.currentSongArtist}>{props.artist}</span>\r\n                <img className={musicControlsCSS.playNext} src={nextTrack} onClick={props.playNext}/>\r\n                <img className={musicControlsCSS.playPrevious} src={previousTrack} onClick={props.playPrevious}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicControls;",{"ruleId":"194","severity":1,"message":"195","line":11,"column":8,"nodeType":"196","messageId":"197","endLine":11,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":47,"column":39,"nodeType":"200","messageId":"201","endLine":47,"endColumn":41},{"ruleId":"202","severity":1,"message":"203","line":55,"column":43,"nodeType":"204","endLine":55,"endColumn":61},{"ruleId":"202","severity":1,"message":"203","line":49,"column":50,"nodeType":"204","endLine":49,"endColumn":68},{"ruleId":"194","severity":1,"message":"205","line":1,"column":38,"nodeType":"196","messageId":"197","endLine":1,"endColumn":44},{"ruleId":"194","severity":1,"message":"206","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":68,"column":8,"nodeType":"209","endLine":68,"endColumn":10,"suggestions":"210"},{"ruleId":"194","severity":1,"message":"211","line":127,"column":11,"nodeType":"196","messageId":"197","endLine":127,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":14,"column":8,"nodeType":"196","messageId":"197","endLine":14,"endColumn":19},{"ruleId":"207","severity":1,"message":"208","line":39,"column":8,"nodeType":"209","endLine":39,"endColumn":10,"suggestions":"212"},{"ruleId":"202","severity":1,"message":"203","line":53,"column":48,"nodeType":"204","endLine":53,"endColumn":66},{"ruleId":"202","severity":1,"message":"203","line":54,"column":66,"nodeType":"204","endLine":54,"endColumn":110},{"ruleId":"202","severity":1,"message":"203","line":55,"column":95,"nodeType":"204","endLine":55,"endColumn":140},{"ruleId":"202","severity":1,"message":"203","line":56,"column":76,"nodeType":"204","endLine":56,"endColumn":124},{"ruleId":"194","severity":1,"message":"213","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":25,"column":25,"nodeType":"200","messageId":"201","endLine":25,"endColumn":27},{"ruleId":"198","severity":1,"message":"199","line":29,"column":31,"nodeType":"200","messageId":"201","endLine":29,"endColumn":33},{"ruleId":"214","severity":1,"message":"215","line":37,"column":25,"nodeType":"196","messageId":"216","endLine":37,"endColumn":26},{"ruleId":"202","severity":1,"message":"203","line":49,"column":69,"nodeType":"204","endLine":49,"endColumn":122},{"ruleId":"194","severity":1,"message":"217","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":11,"column":8,"nodeType":"196","messageId":"197","endLine":11,"endColumn":19},{"ruleId":"207","severity":1,"message":"208","line":32,"column":8,"nodeType":"209","endLine":32,"endColumn":10,"suggestions":"218"},{"ruleId":"202","severity":1,"message":"203","line":59,"column":50,"nodeType":"204","endLine":59,"endColumn":68},{"ruleId":"202","severity":1,"message":"203","line":60,"column":68,"nodeType":"204","endLine":60,"endColumn":114},{"ruleId":"202","severity":1,"message":"203","line":61,"column":69,"nodeType":"204","endLine":61,"endColumn":116},{"ruleId":"202","severity":1,"message":"203","line":62,"column":108,"nodeType":"204","endLine":62,"endColumn":158},{"ruleId":"194","severity":1,"message":"213","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"219","line":15,"column":12,"nodeType":"196","messageId":"197","endLine":15,"endColumn":20},{"ruleId":"194","severity":1,"message":"220","line":15,"column":22,"nodeType":"196","messageId":"197","endLine":15,"endColumn":33},{"ruleId":"194","severity":1,"message":"221","line":26,"column":12,"nodeType":"196","messageId":"197","endLine":26,"endColumn":19},{"ruleId":"194","severity":1,"message":"222","line":26,"column":21,"nodeType":"196","messageId":"197","endLine":26,"endColumn":31},{"ruleId":"194","severity":1,"message":"223","line":33,"column":12,"nodeType":"196","messageId":"197","endLine":33,"endColumn":18},{"ruleId":"194","severity":1,"message":"224","line":33,"column":20,"nodeType":"196","messageId":"197","endLine":33,"endColumn":29},{"ruleId":"214","severity":1,"message":"225","line":157,"column":13,"nodeType":"196","messageId":"216","endLine":157,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":222,"column":13,"nodeType":"196","messageId":"216","endLine":222,"endColumn":14},{"ruleId":"207","severity":1,"message":"208","line":251,"column":8,"nodeType":"209","endLine":251,"endColumn":10,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":561,"column":17,"nodeType":"229","messageId":"230","endLine":567,"endColumn":33},{"ruleId":"214","severity":1,"message":"225","line":75,"column":25,"nodeType":"196","messageId":"216","endLine":75,"endColumn":26},{"ruleId":"207","severity":1,"message":"231","line":83,"column":8,"nodeType":"209","endLine":83,"endColumn":10,"suggestions":"232"},{"ruleId":"214","severity":1,"message":"233","line":118,"column":29,"nodeType":"196","messageId":"216","endLine":118,"endColumn":33},{"ruleId":"194","severity":1,"message":"211","line":147,"column":11,"nodeType":"196","messageId":"197","endLine":147,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":205,"column":53,"nodeType":"204","endLine":205,"endColumn":71},{"ruleId":"202","severity":1,"message":"203","line":206,"column":71,"nodeType":"204","endLine":206,"endColumn":120},{"ruleId":"202","severity":1,"message":"203","line":207,"column":72,"nodeType":"204","endLine":207,"endColumn":122},{"ruleId":"202","severity":1,"message":"203","line":208,"column":81,"nodeType":"204","endLine":208,"endColumn":134},{"ruleId":"202","severity":1,"message":"203","line":223,"column":25,"nodeType":"204","endLine":223,"endColumn":88},{"ruleId":"202","severity":1,"message":"203","line":237,"column":29,"nodeType":"204","endLine":237,"endColumn":85},{"ruleId":"202","severity":1,"message":"203","line":243,"column":45,"nodeType":"204","endLine":243,"endColumn":101},{"ruleId":"202","severity":1,"message":"203","line":246,"column":41,"nodeType":"204","endLine":246,"endColumn":98},{"ruleId":"194","severity":1,"message":"234","line":39,"column":12,"nodeType":"196","messageId":"197","endLine":39,"endColumn":27},{"ruleId":"194","severity":1,"message":"235","line":44,"column":12,"nodeType":"196","messageId":"197","endLine":44,"endColumn":26},{"ruleId":"194","severity":1,"message":"236","line":44,"column":28,"nodeType":"196","messageId":"197","endLine":44,"endColumn":45},{"ruleId":"214","severity":1,"message":"225","line":75,"column":25,"nodeType":"196","messageId":"216","endLine":75,"endColumn":26},{"ruleId":"207","severity":1,"message":"231","line":83,"column":8,"nodeType":"209","endLine":83,"endColumn":10,"suggestions":"237"},{"ruleId":"214","severity":1,"message":"233","line":118,"column":29,"nodeType":"196","messageId":"216","endLine":118,"endColumn":33},{"ruleId":"194","severity":1,"message":"211","line":146,"column":11,"nodeType":"196","messageId":"197","endLine":146,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":196,"column":54,"nodeType":"204","endLine":196,"endColumn":72},{"ruleId":"202","severity":1,"message":"203","line":197,"column":72,"nodeType":"204","endLine":197,"endColumn":122},{"ruleId":"202","severity":1,"message":"203","line":198,"column":73,"nodeType":"204","endLine":198,"endColumn":124},{"ruleId":"202","severity":1,"message":"203","line":199,"column":82,"nodeType":"204","endLine":199,"endColumn":136},{"ruleId":"202","severity":1,"message":"203","line":214,"column":25,"nodeType":"204","endLine":214,"endColumn":90},{"ruleId":"202","severity":1,"message":"203","line":227,"column":29,"nodeType":"204","endLine":227,"endColumn":86},{"ruleId":"202","severity":1,"message":"203","line":233,"column":126,"nodeType":"204","endLine":233,"endColumn":183},{"ruleId":"202","severity":1,"message":"203","line":236,"column":41,"nodeType":"204","endLine":236,"endColumn":99},{"ruleId":"194","severity":1,"message":"213","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"238","line":1,"column":28,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"225","line":79,"column":25,"nodeType":"196","messageId":"216","endLine":79,"endColumn":26},{"ruleId":"207","severity":1,"message":"239","line":88,"column":8,"nodeType":"209","endLine":88,"endColumn":10,"suggestions":"240"},{"ruleId":"214","severity":1,"message":"233","line":126,"column":29,"nodeType":"196","messageId":"216","endLine":126,"endColumn":33},{"ruleId":"194","severity":1,"message":"211","line":168,"column":11,"nodeType":"196","messageId":"197","endLine":168,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":227,"column":55,"nodeType":"204","endLine":227,"endColumn":73},{"ruleId":"202","severity":1,"message":"203","line":228,"column":73,"nodeType":"204","endLine":228,"endColumn":124},{"ruleId":"202","severity":1,"message":"203","line":229,"column":74,"nodeType":"204","endLine":229,"endColumn":126},{"ruleId":"202","severity":1,"message":"203","line":230,"column":83,"nodeType":"204","endLine":230,"endColumn":138},{"ruleId":"202","severity":1,"message":"203","line":262,"column":29,"nodeType":"204","endLine":262,"endColumn":87},{"ruleId":"202","severity":1,"message":"203","line":268,"column":151,"nodeType":"204","endLine":268,"endColumn":314},{"ruleId":"202","severity":1,"message":"203","line":272,"column":41,"nodeType":"204","endLine":272,"endColumn":100},{"ruleId":"194","severity":1,"message":"213","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"238","line":1,"column":28,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"206","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"213","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"238","line":1,"column":28,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"213","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":26},{"ruleId":"194","severity":1,"message":"238","line":1,"column":28,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"203","line":10,"column":17,"nodeType":"204","endLine":10,"endColumn":85},{"ruleId":"202","severity":1,"message":"203","line":14,"column":17,"nodeType":"204","endLine":14,"endColumn":102},{"ruleId":"202","severity":1,"message":"203","line":15,"column":17,"nodeType":"204","endLine":15,"endColumn":114},"no-unused-vars","'MusicPlayer' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'addSongToQueue' is assigned a value but never used.",["242"],"'useEffect' is defined but never used.","no-redeclare","'j' is already defined.","redeclared","'createPlaylistCSS' is defined but never used.",["243"],"'artistID' is assigned a value but never used.","'setArtistID' is assigned a value but never used.","'genreID' is assigned a value but never used.","'setGenreID' is assigned a value but never used.","'songID' is assigned a value but never used.","'setSongID' is assigned a value but never used.","'i' is already defined.",["244"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'dataX', 'iniData', 'navigate', and 'param'. Either include them or remove the dependency array.",["245"],"'temp' is already defined.","'songArtistQueue' is assigned a value but never used.","'previousArtist' is assigned a value but never used.","'setPreviousArtist' is assigned a value but never used.",["246"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dataX', 'id', 'iniData', 'name', and 'navigate'. Either include them or remove the dependency array.",["247"],{"desc":"248","fix":"249"},{"desc":"248","fix":"250"},{"desc":"248","fix":"251"},{"desc":"248","fix":"252"},{"desc":"253","fix":"254"},{"desc":"253","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [navigate]",{"range":"258","text":"259"},{"range":"260","text":"259"},{"range":"261","text":"259"},{"range":"262","text":"259"},"Update the dependencies array to be: [dataX, iniData, navigate, param]",{"range":"263","text":"264"},{"range":"265","text":"264"},"Update the dependencies array to be: [dataX, id, iniData, name, navigate]",{"range":"266","text":"267"},[3008,3010],"[navigate]",[1525,1527],[1291,1293],[7800,7802],[3457,3459],"[dataX, iniData, navigate, param]",[3489,3491],[3742,3744],"[dataX, id, iniData, name, navigate]"]