[{"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\index.js":"1","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\App.js":"2","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\login.js":"4","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\register.js":"5","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\home.js":"6","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genre.js":"7","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\searchBar.js":"8","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\createPlaylist.js":"9","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\songCard.js":"10","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\admin.js":"11","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genreSongs.js":"12","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\artistSongs.js":"13","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicPlayer.js":"14","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\userplaylist.js":"15","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\playlists.js":"16"},{"size":631,"mtime":1681311977152,"results":"17","hashOfConfig":"18"},{"size":1066,"mtime":1682417490148,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1681311977155,"results":"20","hashOfConfig":"18"},{"size":2491,"mtime":1681973407465,"results":"21","hashOfConfig":"18"},{"size":2755,"mtime":1681311977154,"results":"22","hashOfConfig":"18"},{"size":8584,"mtime":1682407379780,"results":"23","hashOfConfig":"18"},{"size":5275,"mtime":1682408219806,"results":"24","hashOfConfig":"18"},{"size":2107,"mtime":1682410941801,"results":"25","hashOfConfig":"18"},{"size":3915,"mtime":1682414095355,"results":"26","hashOfConfig":"18"},{"size":847,"mtime":1682333630871,"results":"27","hashOfConfig":"18"},{"size":21838,"mtime":1682404251233,"results":"28","hashOfConfig":"18"},{"size":6109,"mtime":1682408238022,"results":"29","hashOfConfig":"18"},{"size":5989,"mtime":1682408318561,"results":"30","hashOfConfig":"18"},{"size":755,"mtime":1682347871307,"results":"31","hashOfConfig":"18"},{"size":7143,"mtime":1682419405921,"results":"32","hashOfConfig":"18"},{"size":1071,"mtime":1682407916044,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1iegzw8",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"37"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"37"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"37"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"37"},"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\index.js",[],[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\App.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\login.js",["95","96"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginCSS from './login_registration.module.css';\r\nimport logo from './assets/sesh_white.png';\r\n\r\nfunction Login(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState(''); \r\n    const [passwordType, setPasswordType] = useState('password')\r\n    const [toggle, setToggle] = useState('SHOW')\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    Axios.defaults.withCredentials = true\r\n    const login = () => {\r\n        Axios.post('http://localhost:7000/login', {\r\n        username: username, \r\n        password: password\r\n        }).then((response) => {\r\n            if(response.data.admin){\r\n                navigate('/admin')\r\n            }else{\r\n                if(response.data.message){\r\n                    setLoginStatus(response.data.message);\r\n                }else{\r\n                    navigate(\"/home\")\r\n                    setLoginStatus(\"Welcome \"+response.data[0].u_name);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const togglePasswordType = () => {\r\n        if(passwordType === 'password'){\r\n            setPasswordType('text')\r\n            setToggle('HIDE')\r\n            return;\r\n        }\r\n        setPasswordType('password')\r\n        setToggle('SHOW')\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/login').then((response) => {\r\n            if(response.data.loggedIn == true){\r\n                setLoginStatus(response.data.user[0].u_name)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={loginCSS.card}>\r\n           <h1 className={loginCSS.brand}><img src={logo} />SESH</h1>\r\n           <h2>LOGIN</h2>\r\n            <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={(e)=>{\r\n                setUsername(e.target.value);\r\n            }}/>\r\n            <br />\r\n            <input type={passwordType} placeholder=\"Password\" name=\"password\" onChange={(e)=>{\r\n                setPassword(e.target.value);\r\n            }}/>\r\n            <button className={loginCSS.toggle} onClick={togglePasswordType}>{toggle}</button>\r\n            <br />\r\n            <button onClick={login}>LOGIN</button>\r\n           <p>Don't have an account? <a href='/register'>Register</a></p>\r\n\r\n            <h2>{loginStatus}</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\register.js",["97"],[],"import React,{useState} from 'react';\r\nimport Axios from 'axios';\r\nimport registrationCSS from './login_registration.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nfunction Register(){\r\nconst [username, setUsername] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst [passwordType, setPasswordType] = useState('password')\r\nconst [registerStatus, setRegisterStatus] = useState('')\r\nconst [toggle, setToggle] = useState('SHOW')\r\n\r\nconst register = () => {\r\n    Axios.post('http://localhost:7000/register', {\r\n        username: username, \r\n        email: email, \r\n        password: password\r\n    }).then((response) => {\r\n        console.log(response);\r\n        if(response.data.message){\r\n            setRegisterStatus(response.data.message);\r\n        }else{\r\n            setRegisterStatus(\"Account Create Successfully! Proceed to LOGIN\");\r\n        }\r\n    })\r\n}\r\n\r\nconst togglePasswordType = () => {\r\n    if(passwordType === 'password'){\r\n        setPasswordType('text')\r\n        setToggle('HIDE')\r\n        return;\r\n    }\r\n    setPasswordType('password')\r\n    setToggle('SHOW')\r\n}\r\n\r\nconst renderTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Length: 8 characters<br/>Must Include: Atleast 1 capital letter, 1 small letter, 1 digit and 1 *\r\n    </Tooltip>\r\n  );\r\n\r\n    return (\r\n        <div className={registrationCSS.regCard}>\r\n           <h1 className={registrationCSS.brand}><img src={logo} />SESH</h1>\r\n           <h2>REGISTER</h2>\r\n            <input type=\"text\" placeholder='Username' name=\"username\" onChange={(e)=>{\r\n                setUsername(e.target.value);\r\n            }} />\r\n            <br />\r\n            <input type=\"text\" placeholder='Email' name=\"email\" onChange={(e)=>{\r\n                setEmail(e.target.value);\r\n            }}/>\r\n            <br />\r\n            <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }}  overlay={renderTooltip} >\r\n                <input type={passwordType} placeholder='Password' name=\"password\" onChange={(e)=>{\r\n                    setPassword(e.target.value);\r\n                }}/>\r\n            </OverlayTrigger>\r\n            <button className = {registrationCSS.toggle} onClick={togglePasswordType}>{toggle}</button>\r\n            {/* <span>Length: 8 characters, Must Include: Atleast 1 capital letter, 1 small letter, 1 digit and *</span> */}\r\n            <br />\r\n            <button onClick={register}>REGISTER</button>\r\n           <p>Already have an account? <a href='/'>Login</a></p>\r\n           <h2>{registerStatus}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\home.js",["98","99","100"],[],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport homeCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/homeActive.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlist.png';\r\nimport SearchBar from './components/searchBar';\r\nimport SongCard from './components/songCard';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction Home (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const [images, setImages] = useState([])\r\n    const [songs, setSongs] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n    const [artists, setArtists] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n    const [currentSongImg, setCurrentSongImg] = useState('')\r\n    const [currentSongName, setCurrentSongName] = useState('')\r\n    const [currentSongArtist, setCurrentSongArtist] = useState('')\r\n    const [currentSongUrl, setCurrentSongUrl] = useState('')\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const progressBarRef = useRef();\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/home').then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setSongs(response.data.songs)\r\n                setUrls(response.data.urls)\r\n                setArtists(response.data.artists)\r\n                setGenres(response.data.genres)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    // Search Functionality\r\n    const searchArtists = artists.filter((item, index)=>artists.indexOf(item)===index)\r\n    const searchArray = searchArtists.concat(songs)\r\n\r\n    const songClicked = (e) => {\r\n        setIsShown(true);\r\n        setCurrentSongImg(e.target.src);\r\n        setCurrentSongName(e.target.dataset.title)\r\n        setCurrentSongArtist(e.target.dataset.artist)\r\n        setCurrentSongUrl(e.target.dataset.url);\r\n    }\r\n\r\n    const loadPage = (e)=>{\r\n        const clicked = e.target.innerHTML\r\n        console.log(clicked)\r\n        if(artists.includes(clicked)){\r\n            navigate(`/artist/${clicked}`)\r\n        }else if(songs.includes(clicked)){\r\n            var index = songs.indexOf(clicked)\r\n            setIsShown(true);\r\n            setCurrentSongImg(images[index]);\r\n            setCurrentSongArtist(artists[index])\r\n            setCurrentSongName(songs[index])\r\n            setCurrentSongUrl(urls[index]);\r\n        }\r\n    }\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    const handleProgressChange = () => {\r\n        console.log(progressBarRef.current.value);\r\n      };\r\n\r\n    return (\r\n        <div className={homeCSS.main}>\r\n            <div className={homeCSS.leftPanel}>\r\n                <h1 className={homeCSS.brand}><img src={logo} alt='logo'/>SESH</h1>\r\n                <h2 className={homeCSS.tabName}><a className={homeCSS.active} href='/home'><img className={homeCSS.tabs} src={home} alt='home' />Home</a></h2>\r\n                <h2 className={homeCSS.tabName}><a href='/genre'><img className={homeCSS.tabs} src={genre} alt='genre'/>Genre</a></h2>\r\n                <h2 className={homeCSS.tabName}><a href='/createPlaylist'><img className={homeCSS.tabs} src={playlist} alt='create'/>Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={homeCSS.rightPanel}>\r\n                <div className={homeCSS.searchPanel}>\r\n                    <div className={homeCSS.searchPanelConents}>\r\n                        <SearchBar data={searchArray} onClick={loadPage}/>\r\n                        <button onClick={showOptions} className={homeCSS.logout}>{user.charAt(0)}</button>\r\n                        {clickedOptions && \r\n                            <ul className={homeCSS.userOptions}>\r\n                                <li className={homeCSS.userLogout} onClick={logout}>Logout</li>\r\n                            </ul>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div className={homeCSS.contentPanel}>\r\n                    \r\n                    <div className={homeCSS.welcomeText}>\r\n                        <h1>Hello, {user}</h1>\r\n                        <p>Hope you have a good sesh!</p>\r\n                    </div>\r\n                \r\n                    <div>\r\n                        <h3 className={homeCSS.contentTitle}>Top Songs</h3>\r\n                        <Container>\r\n                            <Row >\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[0]} title={songs[0]} artist={artists[0]} genre={genres[0]} url={urls[0]} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[9]} title={songs[9]} artist={artists[9]} genre={genres[9]} url={urls[9]} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[16]} title={songs[16]} artist={artists[16]} genre={genres[16]} url={urls[16]} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[7]} title={songs[7]} artist={artists[7]} genre={genres[7]} url={urls[7]} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[11]} title={songs[11]} artist={artists[11]} genre={genres[11]} url={urls[11]} onClick={songClicked}/>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row >\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[26]} title={songs[26]} artist={artists[26]} genre={genres[26]} url={urls[26]} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[34]} title={songs[34]} artist={artists[34]} genre={genres[34]} url={urls[34]} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[35]} title={songs[35]} artist={artists[35]} genre={genres[35]} url={urls[35]} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[21]} title={songs[21]} artist={artists[21]} genre={genres[21]} url={urls[21]} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[19]} title={songs[19]} artist={artists[19]} genre={genres[19]} url={urls[19]} onClick={songClicked}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>                \r\n                </div>\r\n            </div>   \r\n            {isShown && \r\n              <MusicPlayer image={currentSongImg} name={currentSongName} artist={currentSongArtist} src={currentSongUrl} />\r\n            }       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genre.js",["101","102","103","104","105","106"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport genreCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menuActive.png';\r\nimport playlist from './assets/playlist.png';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport SongCard from './components/songCard';\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\n\r\nfunction Genre (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const [images, setImages] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/genre').then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setGenres(response.data.genres)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className={genreCSS.main}>\r\n            <div className={genreCSS.leftPanel}>\r\n                <h1 className={genreCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={genreCSS.tabName}><a href='/home'><img className={genreCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={genreCSS.tabName}><a className={genreCSS.active} href='/genre'><img className={genreCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={genreCSS.tabName}><a href='/createPlaylist'><img className={genreCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={genreCSS.rightPanel}>\r\n                <div className={genreCSS.genreSearchPanel}>\r\n                    <button onClick={showOptions} className={genreCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={genreCSS.userOptions}>\r\n                            <li className={genreCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                </div>\r\n\r\n                <div className={genreCSS.contentPanel}>\r\n                \r\n                    <div>\r\n                        <h3 className={genreCSS.contentTitle}>Browse All</h3>\r\n                        <Container>\r\n                            <Row >\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <SongCard img={images[0]} title={genres[0]} to={`/genre/${genres[0]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <SongCard img={images[1]} title={genres[1]} to={`/genre/${genres[1]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <SongCard img={images[2]} title={genres[2]} to={`/genre/${genres[2]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <SongCard img={images[3]} title={genres[3]} to={`/genre/${genres[3]}`}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row >\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <SongCard img={images[4]} title={genres[4]} to={`/genre/${genres[4]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <SongCard img={images[5]} title={genres[5]} to={`/genre/${genres[5]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <SongCard img={images[6]} title={genres[6]} to={`/genre/${genres[6]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <SongCard img={images[7]} title={genres[7]} to={`/genre/${genres[7]}`}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>                \r\n                </div>\r\n            </div>            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Genre;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\searchBar.js",["107","108","109","110","111"],[],"import React, { useEffect, useState } from 'react';\r\nimport searchCSS from '../home_genre_playlist.module.css';\r\nimport search from '../assets/search.png';\r\n\r\nfunction SearchBar (props){\r\n    var [finalData, setFinalData] = useState([])\r\n\r\n    const data = props.data\r\n    const lowerSearchArray = []\r\n    for(var i=0;i<data.length;i++){\r\n        lowerSearchArray.push(data[i].toLowerCase())\r\n    }\r\n\r\n    var searchData = []\r\n    const handleChange = (e)=>{\r\n        searchData = []\r\n        var match = []\r\n        var input = e.target.value.toLowerCase()\r\n\r\n        for(var i=0;i<lowerSearchArray.length;i++){\r\n            if(lowerSearchArray[i].includes(input)){\r\n                match.push(data[i])\r\n            }\r\n        }\r\n        if(match.length == 0){ \r\n            searchData.push({data:\"No results\"})\r\n            setFinalData(searchData)\r\n        }else{\r\n            if(e.target.value == ''){\r\n                setFinalData([])\r\n            }else if(match.length > 10){\r\n                for(var j = 0;j<10;j++){\r\n                    searchData.push({data:match[j]})\r\n                    setFinalData(searchData)\r\n                }\r\n            }else{\r\n                for(var j = 0;j<match.length;j++){\r\n                    searchData.push({data:match[j]})\r\n                    setFinalData(searchData)\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={searchCSS.searchBox}>\r\n            <input className = {searchCSS.searchInput} value={props.value} onChange={handleChange} type='text' placeholder=\"What's on your mind? Artists/Songs\" />\r\n            <button className = {searchCSS.searchButton} onClick=''><img className = {searchCSS.searchImg} src={search}/></button>\r\n            <ul className={searchCSS.list}>\r\n                {finalData.map(item=>{\r\n                    return (\r\n                        <li className={searchCSS.listItem} key={item.data} value={item.data} onClick={props.onClick}>{item.data}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\createPlaylist.js",["112","113","114","115","116","117","118"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport generalCSS from './home_genre_playlist.module.css'\r\nimport createPlaylistCSS from './createPlaylist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlistActive.png';\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction CreatePlaylist (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [playlistName, setPlaylistName] = useState('')\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/createPlaylist').then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    const createPlaylist = () => {\r\n        Axios.post('http://localhost:7000/createplaylist',{\r\n            user: user,\r\n            plname: playlistName\r\n        }).then((response) => {\r\n            if(response.data.id){\r\n                navigate(`/playlist/${response.data.id}`)\r\n            }else{\r\n                console.log(response.data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={generalCSS.main}>\r\n            <div className={generalCSS.leftPanel}>\r\n                <h1 className={generalCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={generalCSS.tabName}><a href='/home'><img className={generalCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={generalCSS.tabName}><a href='/genre'><img className={generalCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={generalCSS.tabName}><a className={generalCSS.active} href='/createPlaylist'><img className={generalCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={generalCSS.rightPanel}>\r\n                <div className={generalCSS.createPlaylistSearchPanel}>\r\n                    <button onClick={showOptions} className={generalCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={generalCSS.userOptions}>\r\n                            <li className={generalCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                    <br/>\r\n                    <h1 className={generalCSS.heading}>Create Playlist</h1>\r\n                </div>\r\n\r\n                <div className={generalCSS.playlistContentPanel}>\r\n                    <div className={generalCSS.createPlaylist}>\r\n                        <h2>Enter Playlist Name</h2>\r\n                        <br/>\r\n                        <input type=\"text\" placeholder='playlist name' onChange={(e)=>{\r\n                                setPlaylistName(e.target.value);\r\n                        }} /><br/>\r\n                        <button className={generalCSS.createPlaylistButton} onClick={createPlaylist}>Create</button>\r\n                    </div> \r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePlaylist;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\songCard.js",["119","120"],[],"import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport songCardCSS from '../home_genre_playlist.module.css';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction SongCard (props) {\r\n\r\n    return (\r\n        <Link to={props.to}>\r\n        <Card className={songCardCSS.card} style={{ width: '14rem' }}>\r\n            <Card.Img variant=\"top\" src={props.img} className={songCardCSS.cardImg} onClick={props.onClick} data-title={props.title} data-artist={props.artist} data-url={props.url}/>\r\n            <Card.Body>\r\n                <Card.Title>{props.title}</Card.Title>\r\n                <Card.Text>\r\n                    <p>{props.artist}</p>\r\n                    <p>{props.genre}</p>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    </Link>\r\n    )\r\n}\r\n\r\nexport default SongCard;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\admin.js",["121","122","123","124","125","126","127","128","129","130"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport adminCSS from './admin.module.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Admin(){\r\n    const [table, setTable] = useState('');\r\n    \r\n    const [operation, setOperation] = useState('')\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const [artistID, setArtistID] = useState('')\r\n    const [artistName, setArtistName] = useState('');\r\n    const [artistImage, setArtistImage] = useState(''); \r\n    const [artistOperationStatus, setArtistOperationStatus] = useState('')\r\n    // For Show\r\n    const [aID, setAID] = useState('')\r\n    const [aName, setAName] = useState('')\r\n    const [aImg, setAImg] = useState('')\r\n\r\n    const [genreName, setGenreName] = useState('');\r\n    const [genreImage, setGenreImage] = useState('');\r\n    const [genreID, setGenreID] = useState('')\r\n    const [genreOperationStatus, setGenreOperationStatus] = useState('')\r\n    // For Show\r\n    const [gID, setGID] = useState('')\r\n    const [gName, setGName] = useState('')\r\n    const [gImg, setGImg] = useState('')\r\n\r\n    const [songID, setSongID] = useState('')\r\n    const [songName, setSongName] = useState('');\r\n    const [songImage, setSongImage] = useState('');\r\n    const [songUrl, setSongUrl] = useState('');\r\n    const [songGenreID, setSongGenreID] = useState('');\r\n    const [songArtistID, setSongArtistID] = useState('');\r\n    const [songOperationStatus, setSongOperationStatus] = useState('')\r\n    // For Show\r\n    const [sID, setSID] = useState('')\r\n    const [sName, setSName] = useState('')\r\n    const [sImg, setSImg] = useState('')\r\n    const [sUrl, setSUrl] = useState('')\r\n    const [sGenreID, setSGenreID] = useState('')\r\n    const [sArtistID, setSArtistID] = useState('')\r\n\r\n    const navigate = useNavigate();\r\n    Axios.defaults.withCredentials = true\r\n    // ARTIST FUNCTIONS\r\n    const addArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName, \r\n        artistImage: artistImage\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName, \r\n        artistImage: artistImage\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showArtist = (e) => {\r\n        setTable(\"artist\")\r\n        setOperation(\"show\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation\r\n        }).then((response) => {\r\n                setAID(response.data.artistID)\r\n                setAName(response.data.artistName)\r\n                setAImg(response.data.artistImage)\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const artistData = [];\r\n    for(var i=0;i<aID.length;i++){\r\n        artistData.push({\r\n            id: aID[i],\r\n            name: aName[i],\r\n            image: aImg[i],\r\n        }\r\n        )\r\n    }    \r\n\r\n    // GENRE FUNCTIONS\r\n    const addGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName, \r\n        genreImage: genreImage\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName, \r\n        genreImage: genreImage\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"show\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation\r\n        }).then((response) => {\r\n            setGID(response.data.genreID)\r\n            setGName(response.data.genreName)\r\n            setGImg(response.data.genreImage)\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const genreData = [];\r\n    for(var i=0;i<gID.length;i++){\r\n        genreData.push({\r\n            id: gID[i],\r\n            name: gName[i],\r\n            image: gImg[i],\r\n        }\r\n        )\r\n    }\r\n\r\n    // SONG FUNCTIONS\r\n    const addSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName, \r\n        songImage: songImage,\r\n        songUrl: songUrl,\r\n        songGenreID: songGenreID,\r\n        songArtistID: songArtistID\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName, \r\n        songImage: songImage,\r\n        songUrl: songUrl\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"show\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation\r\n        }).then((response) => {\r\n            setSID(response.data.songID)\r\n            setSName(response.data.songName)\r\n            setSImg(response.data.songImage)\r\n            setSUrl(response.data.songUrl)\r\n            setSGenreID(response.data.songGenreID)\r\n            setSArtistID(response.data.songArtistID)\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const songData = [];\r\n    for(var i=0;i<sID.length;i++){\r\n        songData.push({\r\n            id: sID[i],\r\n            name: sName[i],\r\n            image: sImg[i],\r\n            url: sUrl[i],\r\n            genreid: sGenreID[i],\r\n            artistid: sArtistID[i]\r\n        }\r\n        )\r\n    }\r\n\r\n    // Logout Function\r\n    const logout = () => {\r\n        setLoginStatus(false)\r\n        Axios.post('http://localhost:7000/admin', {\r\n            admin: loginStatus\r\n        })\r\n        navigate(\"/\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/admin').then((response) => {\r\n            if(response.data.admin === true){\r\n                console.log(\"Admin\")\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className={adminCSS.main}>\r\n         <div className={adminCSS.logout}>\r\n            <h1 className={adminCSS.title}>ADMIN</h1>\r\n            <button onClick={logout}>Logout</button>\r\n         </div>\r\n         <Container>\r\n            \r\n            <Row>\r\n            <h1>Artist</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Add:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <input type='text' placeholder='name' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}/><br/>\r\n                            <label>Artist Image URL:</label>\r\n                            <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                            setArtistImage(e.target.value);\r\n                            }}/><br/>\r\n                            <button onClick={addArtist}>Add Artist</button>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Update:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <select name='select' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}>\r\n                                    {artistData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select><br/>\r\n                            <label>Artist Image URL:</label>\r\n                            <input type='text' placeholder='new image-url' onChange={(e)=>{\r\n                            setArtistImage(e.target.value);\r\n                            }}/><br/>\r\n                            <button onClick={updateArtist}>Update Artist Image</button>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Delete:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <br/>\r\n                            <select name='select' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}>\r\n                                    {artistData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select>\r\n                            <br/>\r\n                            <button onClick={deleteArtist}>Delete Artist</button>\r\n                    </div>\r\n                </Col>\r\n                <h2>{artistOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button name='button' onClick={showArtist}>Show Artist Table</button>\r\n                        <table className={adminCSS.admTable}>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                            </tr>\r\n                            {artistData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n                <hr/>\r\n            </Row>\r\n            \r\n            <br/>\r\n            \r\n            <Row>\r\n            <br/>\r\n            <h1>Genre</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <h2>Add:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <input type='text' placeholder='name' onChange={(e)=>{\r\n                    setGenreName(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Genre Image URL:</label>\r\n                    <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                    setGenreImage(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={addGenre}>Add Genre</button>\r\n                    <br/><br/>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Update:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setGenreName(e.target.value);\r\n                            }}>\r\n                                    {genreData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                    </select><br/>\r\n                    <label>Genre Image URL:</label>\r\n                    <input type='text' placeholder='new genre image-url' onChange={(e)=>{\r\n                    setGenreImage(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={updateGenre}>Update Genre Image</button>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Delete:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <br/>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setGenreName(e.target.value);\r\n                            }}>\r\n                                    {genreData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select><br/>\r\n                    <button onClick={deleteGenre}>Delete Genre</button>\r\n                </Col>\r\n                <h2>{genreOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button onClick={showGenre}>Show Genre Table</button>\r\n                        <table>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                            </tr>\r\n                            {genreData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n                <hr/>\r\n            </Row>\r\n\r\n            <br/>\r\n            \r\n            <Row>\r\n            <br/>\r\n            <h1>Song</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <h2>Add:</h2>\r\n                    <label>Song Name:</label>\r\n                    <input type='text' placeholder='name' onChange={(e)=>{\r\n                    setSongName(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song Image URL:</label>\r\n                    <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                    setSongImage(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song URL:</label>\r\n                    <br/>\r\n                    <input type='text' placeholder='song-url' onChange={(e)=>{\r\n                    setSongUrl(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Genre ID:</label>\r\n                    <br/>\r\n                    <input type='number' placeholder='genre id' onChange={(e)=>{\r\n                    setSongGenreID(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Artist ID:</label>\r\n                    <br/>\r\n                    <input type='number' placeholder='artist id' onChange={(e)=>{\r\n                    setSongArtistID(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={addSong}>Add Song</button>\r\n                    <br/><br/>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Update:</h2>\r\n                    <label>Song Name:</label>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setSongName(e.target.value);\r\n                            }}>\r\n                            {songData.map(item=>{\r\n                                return(\r\n                                    <option key={item.id} value={item.name}>{item.name}</option>\r\n                                )\r\n                            })}\r\n                    </select><br/>\r\n                    <label>Song Image URL:</label>\r\n                    <input type='text' placeholder='new image-url' onChange={(e)=>{\r\n                    setSongImage(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song URL:</label>\r\n                    <br/>\r\n                    <input type='text' placeholder='new song-url' onChange={(e)=>{\r\n                    setSongUrl(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={updateSong}>Update Song Image</button>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Delete:</h2>\r\n                    <label>Song Name:</label>\r\n                    <br/>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setSongName(e.target.value);\r\n                            }}>\r\n                            {songData.map(item=>{\r\n                                return(\r\n                                    <option key={item.id} value={item.name}>{item.name}</option>\r\n                                )\r\n                            })}\r\n                    </select><br/>\r\n                    <button onClick={deleteSong}>Delete Song</button>\r\n                </Col>\r\n                <h2>{songOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button onClick={showSong}>Show Songs Table</button>\r\n                        <table>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                                <th>Url</th>\r\n                                <th>Genre ID</th>\r\n                                <th>Artist ID</th>\r\n                            </tr>\r\n                            {songData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                        <td>{val.url}</td>\r\n                                        <td>{val.genreid}</td>\r\n                                        <td>{val.artistid}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n         </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Admin;\r\n // var grid;\r\n                // var columns = [\r\n                //     {id: \"#\", name: \"#\", field: \"no\"},\r\n                //     {id: \"song\", name: \"Song\", field: \"song\"},\r\n                //     {id: \"artist\", name: \"Artist\", field: \"artist\"}\r\n                // ];\r\n\r\n                // var options = {\r\n                //     enableCellNavigation: true,\r\n                //     enableColumnReorder: false\r\n                // };\r\n\r\n                // console.log(songs)\r\n                // function s() {\r\n                //     var data = [];\r\n                //     for (var i = 0; i < 8; i++) {\r\n                //         data[i] = {\r\n                //             no: (i+1),\r\n                //             song: \"song \"+(i+1),\r\n                //             artist: \"artist \"+ (i+1)\r\n                //         };\r\n                //     }\r\n\r\n                //     grid = new Slick.Grid(\"#myGrid\", data, columns, options);\r\n                // }\r\n\r\n                // s();\r\n\r\n                {/* <table width=\"100%\">\r\n                        <tr>\r\n                            <td valign=\"top\" width=\"50%\">\r\n                                <div id=\"myGrid\"></div>\r\n                            </td>\r\n                        </tr>\r\n                    </table> */}","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genreSongs.js",["131","132","133","134","135","136","137","138","139"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport genreSongsCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlistActive.png';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction GenreSongs (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const {param} = useParams();\r\n    const [images, setImages] = useState([])\r\n    const [songs, setSongs] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n    const [artists, setArtists] = useState([])\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n    const [genreImg, setGenreImg] = useState('')\r\n    const [currentSongImg, setCurrentSongImg] = useState()\r\n    const [currentSongName, setCurrentSongName] = useState('')\r\n    const [currentSongUrl, setCurrentSongUrl] = useState('')\r\n    const [currentSongArtist, setCurrentSongArtist] = useState('')\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n\r\n        Axios.get(`http://localhost:7000/genre/${param}`).then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setSongs(response.data.songs)\r\n                setUrls(response.data.urls)\r\n                setArtists(response.data.artists)\r\n                setGenreImg(response.data.genreImg)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const data = [];\r\n    for(var i=0;i<images.length;i++){\r\n        data.push({\r\n            no: (i+1),\r\n            img: images[i],\r\n            song: songs[i],\r\n            url: urls[i],\r\n            artist: artists[i],\r\n        }\r\n        )\r\n    }\r\n\r\n    console.log(data)\r\n\r\n    const songClicked = (e) => {\r\n        setIsShown(true);\r\n        setCurrentSongImg(e.target.dataset.img);\r\n        setCurrentSongName(e.target.dataset.name)\r\n        setCurrentSongArtist(e.target.dataset.artist)\r\n        setCurrentSongUrl(e.target.dataset.url);\r\n    }\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className={genreSongsCSS.main}>\r\n            <div className={genreSongsCSS.leftPanel}>\r\n                <h1 className={genreSongsCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/home'><img className={genreSongsCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/genre'><img className={genreSongsCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/createPlaylist'><img className={genreSongsCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={genreSongsCSS.rightPanel}>\r\n                <div className={genreSongsCSS.createPlaylistSearchPanel}>\r\n                    <button onClick={showOptions} className={genreSongsCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={genreSongsCSS.userOptions}>\r\n                            <li className={genreSongsCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                    <br/>\r\n                    <div className={genreSongsCSS.titleDetails}>\r\n                        <img className={genreSongsCSS.artist_genreImg} src={genreImg}/>\r\n                        <h2 className={genreSongsCSS.artist_genreName}>{param}</h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={genreSongsCSS.playlistContentPanel}>\r\n\r\n                    <table>\r\n                        <tr className={genreSongsCSS.songsHeader}>\r\n                            \r\n                            <th className={genreSongsCSS.no}>#</th>\r\n                            <th>Image</th>\r\n                            <th>Song</th>\r\n                            <th>Artist</th>\r\n                            <img className={genreSongsCSS.playSong} src={playlist}/>\r\n                        </tr>\r\n                        {data.map((val,key)=>{\r\n                            return(\r\n                                <tr className={genreSongsCSS.songRow} key={key} data-img={val.img} data-artist={val.artist} data-name={val.song} data-url={val.url} onClick={songClicked}>\r\n                                        <td className={genreSongsCSS.no}>{val.no}</td>\r\n                                        <td><img className={genreSongsCSS.tableImg} src={val.img} /></td>\r\n                                        <td>{val.song}</td>\r\n                                        <td>{val.artist}</td>\r\n                                        <img className={genreSongsCSS.playSong} src={playlist} />     \r\n                                </tr>\r\n                            )\r\n                        })\r\n                        }\r\n                    </table>\r\n\r\n                    \r\n                </div>\r\n            </div>  \r\n            {isShown && \r\n            <div className={genreSongsCSS.musicControls}>\r\n                <MusicPlayer image={currentSongImg} name={currentSongName} artist={currentSongArtist} src={currentSongUrl} />\r\n            </div>  \r\n            }          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreSongs;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\artistSongs.js",["140","141","142","143","144","145","146","147","148"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport artistSongsCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlistActive.png';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction ArtistSongs (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const {param} = useParams();\r\n    const [images, setImages] = useState([])\r\n    const [songs, setSongs] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n    const [artistImg, setArtistImg] = useState('')\r\n    const [currentSongImg, setCurrentSongImg] = useState()\r\n    const [currentSongName, setCurrentSongName] = useState('')\r\n    const [currentSongUrl, setCurrentSongUrl] = useState('')\r\n    const [currentSongArtist, setCurrentSongArtist] = useState('')\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:7000/artist/${param}`).then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setSongs(response.data.songs)\r\n                setUrls(response.data.urls)\r\n                setGenres(response.data.genres)\r\n                setArtistImg(response.data.artistImg)\r\n                setCurrentSongArtist(param)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const data = [];\r\n    for(var i=0;i<images.length;i++){\r\n        data.push({\r\n            no: (i+1),\r\n            img: images[i],\r\n            song: songs[i],\r\n            url: urls[i],\r\n            genre: genres[i],\r\n        }\r\n        )\r\n    }\r\n\r\n    console.log(data)\r\n\r\n    const songClicked = (e) => {\r\n        setIsShown(true);\r\n        setCurrentSongImg(e.target.dataset.img);\r\n        setCurrentSongName(e.target.dataset.name)\r\n        setCurrentSongUrl(e.target.dataset.url);\r\n    }\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className={artistSongsCSS.main}>\r\n            <div className={artistSongsCSS.leftPanel}>\r\n                <h1 className={artistSongsCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={artistSongsCSS.tabName}><a href='/home'><img className={artistSongsCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={artistSongsCSS.tabName}><a href='/genre'><img className={artistSongsCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={artistSongsCSS.tabName}><a href='/createPlaylist'><img className={artistSongsCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={artistSongsCSS.rightPanel}>\r\n                <div className={artistSongsCSS.createPlaylistSearchPanel}>\r\n                    <button onClick={showOptions} className={artistSongsCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={artistSongsCSS.userOptions}>\r\n                            <li className={artistSongsCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                    <br/>\r\n                    <div className={artistSongsCSS.titleDetails}>\r\n                        <img className={artistSongsCSS.artist_genreImg} src={artistImg}/>\r\n                        <h2 className={artistSongsCSS.artist_genreName}>{param}</h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={artistSongsCSS.playlistContentPanel}>\r\n                <table>\r\n                        <tr className={artistSongsCSS.songsHeader}>\r\n                            \r\n                            <th className={artistSongsCSS.no}>#</th>\r\n                            <th>Image</th>\r\n                            <th>Song</th>\r\n                            <th>Genre</th>\r\n                            <img className={artistSongsCSS.playSong} src={playlist}/>\r\n                        </tr>\r\n                        {data.map((val,key)=>{\r\n                            return(\r\n                                <tr className={artistSongsCSS.songRow} key={key} data-img={val.img} data-name={val.song} data-url={val.url} onClick={songClicked} >\r\n                                        <td className={artistSongsCSS.no}>{val.no}</td>\r\n                                        <td><img className={artistSongsCSS.tableImg} src={val.img} /></td>\r\n                                        <td>{val.song}</td>\r\n                                        <td>{val.genre}</td>\r\n                                        <img className={artistSongsCSS.playSong} src={playlist} />     \r\n                                </tr>\r\n                            )\r\n                        })\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>     \r\n            {isShown && \r\n                <MusicPlayer image={currentSongImg} name={currentSongName} artist={currentSongArtist} src={currentSongUrl} />\r\n            }        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistSongs;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicPlayer.js",["149","150","151","152"],[],"import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport musicPlayerCSS from '../home_genre_playlist.module.css';\r\n\r\nfunction MusicPlayer (props) {\r\n\r\n    return (\r\n        <div className={musicPlayerCSS.musicControls}>\r\n                <img className={musicPlayerCSS.currentSongImg} src={props.image}/>\r\n                <span className={musicPlayerCSS.currentSongName}>{props.name}</span>\r\n                <br/>\r\n                <span className={musicPlayerCSS.currentSongArtist}>{props.artist}</span>\r\n                <div className={musicPlayerCSS.audioBar}>\r\n                    <audio src = {props.src} autoPlay controls/>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default MusicPlayer;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\userplaylist.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\playlists.js",["153","154","155"],[],"import React, { useEffect, useState } from 'react';\r\nimport playlistsCSS from '../home_genre_playlist.module.css';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Playlists (props) {\r\n    const navigate = useNavigate();\r\n    var playlists = props.playlists\r\n    var ids = props.ids\r\n\r\n    const playlistsArray = []\r\n    for(var i=0;i<playlists.length;i++){\r\n        playlistsArray.push(\r\n            {\r\n                name: playlists[i],\r\n                id: ids[i]\r\n            }\r\n        )\r\n    }\r\n\r\n    const gotoplaylist = (e)=>{\r\n        var id = e.target.dataset.id\r\n        navigate(`/playlist/${id}`)\r\n    }\r\n\r\n    return (\r\n        <ul className={playlistsCSS.playlistList}>\r\n                    {playlistsArray.map(item=>{\r\n                        return (\r\n                            <li className={playlistsCSS.playlistListItem} key={item.data} data-name={item.name} data-id={item.id} onClick={gotoplaylist}>{item.name}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n    )\r\n}\r\n\r\nexport default Playlists;",{"ruleId":"156","severity":1,"message":"157","line":47,"column":39,"nodeType":"158","messageId":"159","endLine":47,"endColumn":41},{"ruleId":"160","severity":1,"message":"161","line":55,"column":43,"nodeType":"162","endLine":55,"endColumn":61},{"ruleId":"160","severity":1,"message":"161","line":49,"column":50,"nodeType":"162","endLine":49,"endColumn":68},{"ruleId":"163","severity":1,"message":"164","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":51,"column":8,"nodeType":"169","endLine":51,"endColumn":10,"suggestions":"170"},{"ruleId":"163","severity":1,"message":"171","line":89,"column":11,"nodeType":"165","messageId":"166","endLine":89,"endColumn":31},{"ruleId":"163","severity":1,"message":"172","line":14,"column":8,"nodeType":"165","messageId":"166","endLine":14,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":39,"column":8,"nodeType":"169","endLine":39,"endColumn":10,"suggestions":"173"},{"ruleId":"160","severity":1,"message":"161","line":53,"column":48,"nodeType":"162","endLine":53,"endColumn":66},{"ruleId":"160","severity":1,"message":"161","line":54,"column":66,"nodeType":"162","endLine":54,"endColumn":110},{"ruleId":"160","severity":1,"message":"161","line":55,"column":95,"nodeType":"162","endLine":55,"endColumn":140},{"ruleId":"160","severity":1,"message":"161","line":56,"column":76,"nodeType":"162","endLine":56,"endColumn":124},{"ruleId":"163","severity":1,"message":"174","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":25,"column":25,"nodeType":"158","messageId":"159","endLine":25,"endColumn":27},{"ruleId":"156","severity":1,"message":"157","line":29,"column":31,"nodeType":"158","messageId":"159","endLine":29,"endColumn":33},{"ruleId":"175","severity":1,"message":"176","line":37,"column":25,"nodeType":"165","messageId":"177","endLine":37,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":49,"column":69,"nodeType":"162","endLine":49,"endColumn":122},{"ruleId":"163","severity":1,"message":"178","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":25},{"ruleId":"163","severity":1,"message":"172","line":11,"column":8,"nodeType":"165","messageId":"166","endLine":11,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":32,"column":8,"nodeType":"169","endLine":32,"endColumn":10,"suggestions":"179"},{"ruleId":"160","severity":1,"message":"161","line":59,"column":50,"nodeType":"162","endLine":59,"endColumn":68},{"ruleId":"160","severity":1,"message":"161","line":60,"column":68,"nodeType":"162","endLine":60,"endColumn":114},{"ruleId":"160","severity":1,"message":"161","line":61,"column":69,"nodeType":"162","endLine":61,"endColumn":116},{"ruleId":"160","severity":1,"message":"161","line":62,"column":108,"nodeType":"162","endLine":62,"endColumn":158},{"ruleId":"163","severity":1,"message":"174","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"180","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"181","line":15,"column":12,"nodeType":"165","messageId":"166","endLine":15,"endColumn":20},{"ruleId":"163","severity":1,"message":"182","line":15,"column":22,"nodeType":"165","messageId":"166","endLine":15,"endColumn":33},{"ruleId":"163","severity":1,"message":"183","line":26,"column":12,"nodeType":"165","messageId":"166","endLine":26,"endColumn":19},{"ruleId":"163","severity":1,"message":"184","line":26,"column":21,"nodeType":"165","messageId":"166","endLine":26,"endColumn":31},{"ruleId":"163","severity":1,"message":"185","line":33,"column":12,"nodeType":"165","messageId":"166","endLine":33,"endColumn":18},{"ruleId":"163","severity":1,"message":"186","line":33,"column":20,"nodeType":"165","messageId":"166","endLine":33,"endColumn":29},{"ruleId":"175","severity":1,"message":"187","line":167,"column":13,"nodeType":"165","messageId":"177","endLine":167,"endColumn":14},{"ruleId":"175","severity":1,"message":"187","line":237,"column":13,"nodeType":"165","messageId":"177","endLine":237,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":266,"column":8,"nodeType":"169","endLine":266,"endColumn":10,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":576,"column":17,"nodeType":"191","messageId":"192","endLine":582,"endColumn":33},{"ruleId":"167","severity":1,"message":"193","line":48,"column":8,"nodeType":"169","endLine":48,"endColumn":10,"suggestions":"194"},{"ruleId":"160","severity":1,"message":"161","line":84,"column":53,"nodeType":"162","endLine":84,"endColumn":71},{"ruleId":"160","severity":1,"message":"161","line":85,"column":71,"nodeType":"162","endLine":85,"endColumn":120},{"ruleId":"160","severity":1,"message":"161","line":86,"column":72,"nodeType":"162","endLine":86,"endColumn":122},{"ruleId":"160","severity":1,"message":"161","line":87,"column":81,"nodeType":"162","endLine":87,"endColumn":134},{"ruleId":"160","severity":1,"message":"161","line":102,"column":25,"nodeType":"162","endLine":102,"endColumn":88},{"ruleId":"160","severity":1,"message":"161","line":116,"column":29,"nodeType":"162","endLine":116,"endColumn":85},{"ruleId":"160","severity":1,"message":"161","line":122,"column":45,"nodeType":"162","endLine":122,"endColumn":101},{"ruleId":"160","severity":1,"message":"161","line":125,"column":41,"nodeType":"162","endLine":125,"endColumn":98},{"ruleId":"167","severity":1,"message":"193","line":48,"column":8,"nodeType":"169","endLine":48,"endColumn":10,"suggestions":"195"},{"ruleId":"160","severity":1,"message":"161","line":83,"column":54,"nodeType":"162","endLine":83,"endColumn":72},{"ruleId":"160","severity":1,"message":"161","line":84,"column":72,"nodeType":"162","endLine":84,"endColumn":122},{"ruleId":"160","severity":1,"message":"161","line":85,"column":73,"nodeType":"162","endLine":85,"endColumn":124},{"ruleId":"160","severity":1,"message":"161","line":86,"column":82,"nodeType":"162","endLine":86,"endColumn":136},{"ruleId":"160","severity":1,"message":"161","line":101,"column":25,"nodeType":"162","endLine":101,"endColumn":90},{"ruleId":"160","severity":1,"message":"161","line":114,"column":29,"nodeType":"162","endLine":114,"endColumn":86},{"ruleId":"160","severity":1,"message":"161","line":120,"column":45,"nodeType":"162","endLine":120,"endColumn":102},{"ruleId":"160","severity":1,"message":"161","line":123,"column":41,"nodeType":"162","endLine":123,"endColumn":99},{"ruleId":"163","severity":1,"message":"174","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"180","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":2,"column":9,"nodeType":"165","messageId":"166","endLine":2,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":9,"column":17,"nodeType":"162","endLine":9,"endColumn":83},{"ruleId":"163","severity":1,"message":"174","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"180","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["196"],"'handleProgressChange' is assigned a value but never used.","'MusicPlayer' is defined but never used.",["197"],"'useEffect' is defined but never used.","no-redeclare","'j' is already defined.","redeclared","'createPlaylistCSS' is defined but never used.",["198"],"'useState' is defined but never used.","'artistID' is assigned a value but never used.","'setArtistID' is assigned a value but never used.","'genreID' is assigned a value but never used.","'setGenreID' is assigned a value but never used.","'songID' is assigned a value but never used.","'setSongID' is assigned a value but never used.","'i' is already defined.",["199"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'navigate' and 'param'. Either include them or remove the dependency array.",["200"],["201"],{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},{"desc":"202","fix":"205"},{"desc":"202","fix":"206"},{"desc":"207","fix":"208"},{"desc":"207","fix":"209"},"Update the dependencies array to be: [navigate]",{"range":"210","text":"211"},{"range":"212","text":"211"},{"range":"213","text":"211"},{"range":"214","text":"211"},"Update the dependencies array to be: [navigate, param]",{"range":"215","text":"216"},{"range":"217","text":"216"},[2204,2206],"[navigate]",[1523,1525],[1291,1293],[8160,8162],[2035,2037],"[navigate, param]",[2081,2083]]