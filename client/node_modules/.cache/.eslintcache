[{"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\index.js":"1","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\App.js":"2","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\login.js":"4","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\register.js":"5","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\home.js":"6","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genre.js":"7","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\searchBar.js":"8","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\createPlaylist.js":"9","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\songCard.js":"10","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\admin.js":"11","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genreSongs.js":"12","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\artistSongs.js":"13","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicPlayer.js":"14","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\userplaylist.js":"15","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\playlists.js":"16","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\genreCard.js":"17","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicControls.js":"18"},{"size":631,"mtime":1681311977152,"results":"19","hashOfConfig":"20"},{"size":1127,"mtime":1682492258067,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1681311977155,"results":"22","hashOfConfig":"20"},{"size":2491,"mtime":1681973407465,"results":"23","hashOfConfig":"20"},{"size":2755,"mtime":1681311977154,"results":"24","hashOfConfig":"20"},{"size":12885,"mtime":1682589458117,"results":"25","hashOfConfig":"20"},{"size":5285,"mtime":1682504957633,"results":"26","hashOfConfig":"20"},{"size":2090,"mtime":1682483609198,"results":"27","hashOfConfig":"20"},{"size":3937,"mtime":1682571352543,"results":"28","hashOfConfig":"20"},{"size":2129,"mtime":1682577246631,"results":"29","hashOfConfig":"20"},{"size":21478,"mtime":1682487360376,"results":"30","hashOfConfig":"20"},{"size":10513,"mtime":1682590737808,"results":"31","hashOfConfig":"20"},{"size":10289,"mtime":1682590322526,"results":"32","hashOfConfig":"20"},{"size":699,"mtime":1682587999235,"results":"33","hashOfConfig":"20"},{"size":12400,"mtime":1682591367052,"results":"34","hashOfConfig":"20"},{"size":1121,"mtime":1682482422853,"results":"35","hashOfConfig":"20"},{"size":895,"mtime":1682504902158,"results":"36","hashOfConfig":"20"},{"size":900,"mtime":1682588262957,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1iegzw8",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\index.js",[],[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\App.js",["100"],[],"import Login from './login';\r\nimport Register from './register';\r\nimport Home from './home';\r\nimport Genre from './genre';\r\nimport CreatePlaylist from './createPlaylist';\r\nimport Admin from './admin';\r\nimport GenreSongs from './genreSongs';\r\nimport ArtistSongs from './artistSongs';\r\nimport UserPlaylist from './userplaylist';\r\nimport {Routes, Route} from 'react-router-dom';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login/>} /> {/*First page is login page*/}\r\n        <Route path=\"/register\" element={<Register/>} />\r\n        <Route path=\"/home\" element={<Home/>} />\r\n        <Route path=\"/genre\" element={<Genre/>} />\r\n        <Route path=\"/createPlaylist\" element={<CreatePlaylist/>} />\r\n        <Route path='/admin' element={<Admin/>}/>\r\n        <Route path='/genre/:param' element={<GenreSongs/>} />\r\n        <Route path='/artist/:param' element={<ArtistSongs/>} />\r\n        <Route path='/playlist/:name/:id' element={<UserPlaylist/>} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;",[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\login.js",["101","102"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginCSS from './login_registration.module.css';\r\nimport logo from './assets/sesh_white.png';\r\n\r\nfunction Login(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState(''); \r\n    const [passwordType, setPasswordType] = useState('password')\r\n    const [toggle, setToggle] = useState('SHOW')\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    Axios.defaults.withCredentials = true\r\n    const login = () => {\r\n        Axios.post('http://localhost:7000/login', {\r\n        username: username, \r\n        password: password\r\n        }).then((response) => {\r\n            if(response.data.admin){\r\n                navigate('/admin')\r\n            }else{\r\n                if(response.data.message){\r\n                    setLoginStatus(response.data.message);\r\n                }else{\r\n                    navigate(\"/home\")\r\n                    setLoginStatus(\"Welcome \"+response.data[0].u_name);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const togglePasswordType = () => {\r\n        if(passwordType === 'password'){\r\n            setPasswordType('text')\r\n            setToggle('HIDE')\r\n            return;\r\n        }\r\n        setPasswordType('password')\r\n        setToggle('SHOW')\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/login').then((response) => {\r\n            if(response.data.loggedIn == true){\r\n                setLoginStatus(response.data.user[0].u_name)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={loginCSS.card}>\r\n           <h1 className={loginCSS.brand}><img src={logo} />SESH</h1>\r\n           <h2>LOGIN</h2>\r\n            <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={(e)=>{\r\n                setUsername(e.target.value);\r\n            }}/>\r\n            <br />\r\n            <input type={passwordType} placeholder=\"Password\" name=\"password\" onChange={(e)=>{\r\n                setPassword(e.target.value);\r\n            }}/>\r\n            <button className={loginCSS.toggle} onClick={togglePasswordType}>{toggle}</button>\r\n            <br />\r\n            <button onClick={login}>LOGIN</button>\r\n           <p>Don't have an account? <a href='/register'>Register</a></p>\r\n\r\n            <h2>{loginStatus}</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\register.js",["103"],[],"import React,{useState} from 'react';\r\nimport Axios from 'axios';\r\nimport registrationCSS from './login_registration.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nfunction Register(){\r\nconst [username, setUsername] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst [passwordType, setPasswordType] = useState('password')\r\nconst [registerStatus, setRegisterStatus] = useState('')\r\nconst [toggle, setToggle] = useState('SHOW')\r\n\r\nconst register = () => {\r\n    Axios.post('http://localhost:7000/register', {\r\n        username: username, \r\n        email: email, \r\n        password: password\r\n    }).then((response) => {\r\n        console.log(response);\r\n        if(response.data.message){\r\n            setRegisterStatus(response.data.message);\r\n        }else{\r\n            setRegisterStatus(\"Account Create Successfully! Proceed to LOGIN\");\r\n        }\r\n    })\r\n}\r\n\r\nconst togglePasswordType = () => {\r\n    if(passwordType === 'password'){\r\n        setPasswordType('text')\r\n        setToggle('HIDE')\r\n        return;\r\n    }\r\n    setPasswordType('password')\r\n    setToggle('SHOW')\r\n}\r\n\r\nconst renderTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Length: 8 characters<br/>Must Include: Atleast 1 capital letter, 1 small letter, 1 digit and 1 *\r\n    </Tooltip>\r\n  );\r\n\r\n    return (\r\n        <div className={registrationCSS.regCard}>\r\n           <h1 className={registrationCSS.brand}><img src={logo} />SESH</h1>\r\n           <h2>REGISTER</h2>\r\n            <input type=\"text\" placeholder='Username' name=\"username\" onChange={(e)=>{\r\n                setUsername(e.target.value);\r\n            }} />\r\n            <br />\r\n            <input type=\"text\" placeholder='Email' name=\"email\" onChange={(e)=>{\r\n                setEmail(e.target.value);\r\n            }}/>\r\n            <br />\r\n            <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }}  overlay={renderTooltip} >\r\n                <input type={passwordType} placeholder='Password' name=\"password\" onChange={(e)=>{\r\n                    setPassword(e.target.value);\r\n                }}/>\r\n            </OverlayTrigger>\r\n            <button className = {registrationCSS.toggle} onClick={togglePasswordType}>{toggle}</button>\r\n            {/* <span>Length: 8 characters, Must Include: Atleast 1 capital letter, 1 small letter, 1 digit and *</span> */}\r\n            <br />\r\n            <button onClick={register}>REGISTER</button>\r\n           <p>Already have an account? <a href='/'>Login</a></p>\r\n           <h2>{registerStatus}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\home.js",["104","105","106","107"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genre.js",["108","109","110","111","112","113"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport genreCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menuActive.png';\r\nimport playlist from './assets/playlist.png';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport GenreCard from './components/genreCard';\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\n\r\nfunction Genre (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const [images, setImages] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/genre').then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setGenres(response.data.genres)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div className={genreCSS.main}>\r\n            <div className={genreCSS.leftPanel}>\r\n                <h1 className={genreCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={genreCSS.tabName}><a href='/home'><img className={genreCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={genreCSS.tabName}><a className={genreCSS.active} href='/genre'><img className={genreCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={genreCSS.tabName}><a href='/createPlaylist'><img className={genreCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={genreCSS.rightPanel}>\r\n                <div className={genreCSS.genreSearchPanel}>\r\n                    <button onClick={showOptions} className={genreCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={genreCSS.userOptions}>\r\n                            <li className={genreCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                </div>\r\n\r\n                <div className={genreCSS.contentPanel}>\r\n                \r\n                    <div>\r\n                        <h3 className={genreCSS.contentTitle}>Browse All</h3>\r\n                        <Container>\r\n                            <Row >\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[0]} title={genres[0]} to={`/genre/${genres[0]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[1]} title={genres[1]} to={`/genre/${genres[1]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[2]} title={genres[2]} to={`/genre/${genres[2]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[3]} title={genres[3]} to={`/genre/${genres[3]}`}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row >\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[4]} title={genres[4]} to={`/genre/${genres[4]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[5]} title={genres[5]} to={`/genre/${genres[5]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[6]} title={genres[6]} to={`/genre/${genres[6]}`}/>\r\n                                </Col>\r\n                                <Col className={genreCSS.gridColumn}>\r\n                                    <GenreCard img={images[7]} title={genres[7]} to={`/genre/${genres[7]}`}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>                \r\n                </div>\r\n            </div>            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Genre;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\searchBar.js",["114","115","116","117","118"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\createPlaylist.js",["119","120","121","122","123","124","125"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\songCard.js",["126"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\admin.js",["127","128","129","130","131","132","133","134","135","136"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport adminCSS from './admin.module.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Admin(){\r\n    const [table, setTable] = useState('');\r\n    \r\n    const [operation, setOperation] = useState('')\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const [artistID, setArtistID] = useState('')\r\n    const [artistName, setArtistName] = useState('');\r\n    const [artistImage, setArtistImage] = useState(''); \r\n    const [artistOperationStatus, setArtistOperationStatus] = useState('')\r\n    // For Show\r\n    const [aID, setAID] = useState('')\r\n    const [aName, setAName] = useState('')\r\n    const [aImg, setAImg] = useState('')\r\n\r\n    const [genreName, setGenreName] = useState('');\r\n    const [genreImage, setGenreImage] = useState('');\r\n    const [genreID, setGenreID] = useState('')\r\n    const [genreOperationStatus, setGenreOperationStatus] = useState('')\r\n    // For Show\r\n    const [gID, setGID] = useState('')\r\n    const [gName, setGName] = useState('')\r\n    const [gImg, setGImg] = useState('')\r\n\r\n    const [songID, setSongID] = useState('')\r\n    const [songName, setSongName] = useState('');\r\n    const [songImage, setSongImage] = useState('');\r\n    const [songUrl, setSongUrl] = useState('');\r\n    const [songGenreID, setSongGenreID] = useState('');\r\n    const [songArtistID, setSongArtistID] = useState('');\r\n    const [songOperationStatus, setSongOperationStatus] = useState('')\r\n    // For Show\r\n    const [sID, setSID] = useState('')\r\n    const [sName, setSName] = useState('')\r\n    const [sImg, setSImg] = useState('')\r\n    const [sUrl, setSUrl] = useState('')\r\n    const [sGenreID, setSGenreID] = useState('')\r\n    const [sArtistID, setSArtistID] = useState('')\r\n\r\n    const navigate = useNavigate();\r\n    Axios.defaults.withCredentials = true\r\n    // ARTIST FUNCTIONS\r\n    const addArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName, \r\n        artistImage: artistImage\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName, \r\n        artistImage: artistImage\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteArtist = () => {\r\n        setTable(\"artist\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        artistName: artistName\r\n        }).then((response) => {\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showArtist = (e) => {\r\n        Axios.post('http://localhost:7000/showartist').then((response) => {\r\n                setAID(response.data.artistID)\r\n                setAName(response.data.artistName)\r\n                setAImg(response.data.artistImage)\r\n            setArtistOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const artistData = [];\r\n    for(var i=0;i<aID.length;i++){\r\n        artistData.push({\r\n            id: aID[i],\r\n            name: aName[i],\r\n            image: aImg[i],\r\n        }\r\n        )\r\n    }    \r\n\r\n    // GENRE FUNCTIONS\r\n    const addGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName, \r\n        genreImage: genreImage\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName, \r\n        genreImage: genreImage\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteGenre = () => {\r\n        setTable(\"genre\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        genreName: genreName\r\n        }).then((response) => {\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showGenre = () => {\r\n        Axios.post('http://localhost:7000/showgenre').then((response) => {\r\n            setGID(response.data.genreID)\r\n            setGName(response.data.genreName)\r\n            setGImg(response.data.genreImage)\r\n            setGenreOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const genreData = [];\r\n    for(var i=0;i<gID.length;i++){\r\n        genreData.push({\r\n            id: gID[i],\r\n            name: gName[i],\r\n            image: gImg[i],\r\n        }\r\n        )\r\n    }\r\n\r\n    // SONG FUNCTIONS\r\n    const addSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"add\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName, \r\n        songImage: songImage,\r\n        songUrl: songUrl,\r\n        songGenreID: songGenreID,\r\n        songArtistID: songArtistID\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const updateSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"update\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName, \r\n        songImage: songImage,\r\n        songUrl: songUrl\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const deleteSong = () => {\r\n        setTable(\"song\")\r\n        setOperation(\"delete\")\r\n        Axios.post('http://localhost:7000/admin', {\r\n        table: table,\r\n        operation: operation,\r\n        songName: songName\r\n        }).then((response) => {\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const showSong = () => {\r\n        Axios.post('http://localhost:7000/showsong').then((response) => {\r\n            setSID(response.data.songID)\r\n            setSName(response.data.songName)\r\n            setSImg(response.data.songImage)\r\n            setSUrl(response.data.songUrl)\r\n            setSGenreID(response.data.songGenreID)\r\n            setSArtistID(response.data.songArtistID)\r\n            setSongOperationStatus(response.data.message)\r\n        })\r\n    }\r\n\r\n    const songData = [];\r\n    for(var i=0;i<sID.length;i++){\r\n        songData.push({\r\n            id: sID[i],\r\n            name: sName[i],\r\n            image: sImg[i],\r\n            url: sUrl[i],\r\n            genreid: sGenreID[i],\r\n            artistid: sArtistID[i]\r\n        }\r\n        )\r\n    }\r\n\r\n    // Logout Function\r\n    const logout = () => {\r\n        setLoginStatus(false)\r\n        Axios.post('http://localhost:7000/admin', {\r\n            admin: loginStatus\r\n        })\r\n        navigate(\"/\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/admin').then((response) => {\r\n            if(response.data.admin === true){\r\n                console.log(\"Admin\")\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className={adminCSS.main}>\r\n         <div className={adminCSS.logout}>\r\n            <h1 className={adminCSS.title}>ADMIN</h1>\r\n            <button onClick={logout}>Logout</button>\r\n         </div>\r\n         <Container>\r\n            \r\n            <Row>\r\n            <h1>Artist</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Add:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <input type='text' placeholder='name' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}/><br/>\r\n                            <label>Artist Image URL:</label>\r\n                            <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                            setArtistImage(e.target.value);\r\n                            }}/><br/>\r\n                            <button onClick={addArtist}>Add Artist</button>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Update:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <select name='select' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}>\r\n                                    {artistData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select><br/>\r\n                            <label>Artist Image URL:</label>\r\n                            <input type='text' placeholder='new image-url' onChange={(e)=>{\r\n                            setArtistImage(e.target.value);\r\n                            }}/><br/>\r\n                            <button onClick={updateArtist}>Update Artist Image</button>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Delete:</h2>\r\n                            <label>Artist Name:</label>\r\n                            <br/>\r\n                            <select name='select' onChange={(e)=>{\r\n                            setArtistName(e.target.value);\r\n                            }}>\r\n                                    {artistData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select>\r\n                            <br/>\r\n                            <button onClick={deleteArtist}>Delete Artist</button>\r\n                    </div>\r\n                </Col>\r\n                <h2>{artistOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button name='button' onClick={showArtist}>Show Artist Table</button>\r\n                        <table className={adminCSS.admTable}>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                            </tr>\r\n                            {artistData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n                <hr/>\r\n            </Row>\r\n            \r\n            <br/>\r\n            \r\n            <Row>\r\n            <br/>\r\n            <h1>Genre</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <h2>Add:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <input type='text' placeholder='name' onChange={(e)=>{\r\n                    setGenreName(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Genre Image URL:</label>\r\n                    <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                    setGenreImage(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={addGenre}>Add Genre</button>\r\n                    <br/><br/>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Update:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setGenreName(e.target.value);\r\n                            }}>\r\n                                    {genreData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                    </select><br/>\r\n                    <label>Genre Image URL:</label>\r\n                    <input type='text' placeholder='new genre image-url' onChange={(e)=>{\r\n                    setGenreImage(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={updateGenre}>Update Genre Image</button>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Delete:</h2>\r\n                    <label>Genre Name:</label>\r\n                    <br/>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setGenreName(e.target.value);\r\n                            }}>\r\n                                    {genreData.map(item=>{\r\n                                        return(\r\n                                            <option key={item.id} value={item.name}>{item.name}</option>\r\n                                        )\r\n                                    })}\r\n                            </select><br/>\r\n                    <button onClick={deleteGenre}>Delete Genre</button>\r\n                </Col>\r\n                <h2>{genreOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button onClick={showGenre}>Show Genre Table</button>\r\n                        <table>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                            </tr>\r\n                            {genreData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n                <hr/>\r\n            </Row>\r\n\r\n            <br/>\r\n            \r\n            <Row>\r\n            <br/>\r\n            <h1>Song</h1>\r\n            <br/><br/><br/>\r\n                <Col>\r\n                    <h2>Add:</h2>\r\n                    <label>Song Name:</label>\r\n                    <input type='text' placeholder='name' onChange={(e)=>{\r\n                    setSongName(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song Image URL:</label>\r\n                    <input type='text' placeholder='image-url' onChange={(e)=>{\r\n                    setSongImage(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song URL:</label>\r\n                    <br/>\r\n                    <input type='text' placeholder='song-url' onChange={(e)=>{\r\n                    setSongUrl(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Genre ID:</label>\r\n                    <br/>\r\n                    <input type='number' placeholder='genre id' onChange={(e)=>{\r\n                    setSongGenreID(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Artist ID:</label>\r\n                    <br/>\r\n                    <input type='number' placeholder='artist id' onChange={(e)=>{\r\n                    setSongArtistID(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={addSong}>Add Song</button>\r\n                    <br/><br/>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Update:</h2>\r\n                    <label>Song Name:</label>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setSongName(e.target.value);\r\n                            }}>\r\n                            {songData.map(item=>{\r\n                                return(\r\n                                    <option key={item.id} value={item.name}>{item.name}</option>\r\n                                )\r\n                            })}\r\n                    </select><br/>\r\n                    <label>Song Image URL:</label>\r\n                    <input type='text' placeholder='new image-url' onChange={(e)=>{\r\n                    setSongImage(e.target.value);\r\n                    }}/><br/>\r\n                    <label>Song URL:</label>\r\n                    <br/>\r\n                    <input type='text' placeholder='new song-url' onChange={(e)=>{\r\n                    setSongUrl(e.target.value);\r\n                    }}/><br/>\r\n                    <button onClick={updateSong}>Update Song Image</button>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Delete:</h2>\r\n                    <label>Song Name:</label>\r\n                    <br/>\r\n                    <select name='select' onChange={(e)=>{\r\n                            setSongName(e.target.value);\r\n                            }}>\r\n                            {songData.map(item=>{\r\n                                return(\r\n                                    <option key={item.id} value={item.name}>{item.name}</option>\r\n                                )\r\n                            })}\r\n                    </select><br/>\r\n                    <button onClick={deleteSong}>Delete Song</button>\r\n                </Col>\r\n                <h2>{songOperationStatus}</h2>\r\n                <Col>\r\n                    <div className={adminCSS.operation}>\r\n                        <h2>Show:</h2>\r\n                            <button onClick={showSong}>Show Songs Table</button>\r\n                        <table>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Image</th>\r\n                                <th>Url</th>\r\n                                <th>Genre ID</th>\r\n                                <th>Artist ID</th>\r\n                            </tr>\r\n                            {songData.map((val,key)=>{\r\n                                return(\r\n                                    <tr key={key}>\r\n                                        <td>{val.id}</td>\r\n                                        <td>{val.name}</td>\r\n                                        <td>{val.image}</td>\r\n                                        <td>{val.url}</td>\r\n                                        <td>{val.genreid}</td>\r\n                                        <td>{val.artistid}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                        </table>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n         </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Admin;\r\n // var grid;\r\n                // var columns = [\r\n                //     {id: \"#\", name: \"#\", field: \"no\"},\r\n                //     {id: \"song\", name: \"Song\", field: \"song\"},\r\n                //     {id: \"artist\", name: \"Artist\", field: \"artist\"}\r\n                // ];\r\n\r\n                // var options = {\r\n                //     enableCellNavigation: true,\r\n                //     enableColumnReorder: false\r\n                // };\r\n\r\n                // console.log(songs)\r\n                // function s() {\r\n                //     var data = [];\r\n                //     for (var i = 0; i < 8; i++) {\r\n                //         data[i] = {\r\n                //             no: (i+1),\r\n                //             song: \"song \"+(i+1),\r\n                //             artist: \"artist \"+ (i+1)\r\n                //         };\r\n                //     }\r\n\r\n                //     grid = new Slick.Grid(\"#myGrid\", data, columns, options);\r\n                // }\r\n\r\n                // s();\r\n\r\n                {/* <table width=\"100%\">\r\n                        <tr>\r\n                            <td valign=\"top\" width=\"50%\">\r\n                                <div id=\"myGrid\"></div>\r\n                            </td>\r\n                        </tr>\r\n                    </table> */}","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genreSongs.js",["137","138","139","140","141","142","143","144","145","146","147","148"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\artistSongs.js",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicPlayer.js",["164","165"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\userplaylist.js",["166","167","168","169","170","171","172","173","174","175","176"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\playlists.js",["177","178","179"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\genreCard.js",["180","181"],[],"import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport songCardCSS from '../home_genre_playlist.module.css';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction GenreCard (props) {\r\n\r\n    return (\r\n        <Link to={props.to}>\r\n        \r\n        <Card className={songCardCSS.card} onContextMenu={props.onContextMenu} style={{ width: '14rem' }}>\r\n            <Card.Img variant=\"top\" src={props.img} className={songCardCSS.cardImg} onClick={props.onClick} data-title={props.title} data-artist={props.artist} data-url={props.url}/>\r\n            <Card.Body>\r\n                <Card.Title>{props.title}</Card.Title>\r\n                <Card.Text>\r\n                    <p>{props.artist}</p>\r\n                    <p>{props.genre}</p>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    </Link>\r\n    )\r\n}\r\n\r\nexport default GenreCard;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicControls.js",["182","183","184","185","186"],[],{"ruleId":"187","severity":1,"message":"188","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":47,"column":39,"nodeType":"193","messageId":"194","endLine":47,"endColumn":41},{"ruleId":"195","severity":1,"message":"196","line":55,"column":43,"nodeType":"197","endLine":55,"endColumn":61},{"ruleId":"195","severity":1,"message":"196","line":49,"column":50,"nodeType":"197","endLine":49,"endColumn":68},{"ruleId":"187","severity":1,"message":"198","line":1,"column":38,"nodeType":"189","messageId":"190","endLine":1,"endColumn":44},{"ruleId":"187","severity":1,"message":"199","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":68,"column":8,"nodeType":"202","endLine":68,"endColumn":10,"suggestions":"203"},{"ruleId":"187","severity":1,"message":"204","line":127,"column":11,"nodeType":"189","messageId":"190","endLine":127,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":39,"column":8,"nodeType":"202","endLine":39,"endColumn":10,"suggestions":"205"},{"ruleId":"195","severity":1,"message":"196","line":53,"column":48,"nodeType":"197","endLine":53,"endColumn":66},{"ruleId":"195","severity":1,"message":"196","line":54,"column":66,"nodeType":"197","endLine":54,"endColumn":110},{"ruleId":"195","severity":1,"message":"196","line":55,"column":95,"nodeType":"197","endLine":55,"endColumn":140},{"ruleId":"195","severity":1,"message":"196","line":56,"column":76,"nodeType":"197","endLine":56,"endColumn":124},{"ruleId":"187","severity":1,"message":"206","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"192","line":25,"column":25,"nodeType":"193","messageId":"194","endLine":25,"endColumn":27},{"ruleId":"191","severity":1,"message":"192","line":29,"column":31,"nodeType":"193","messageId":"194","endLine":29,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":37,"column":25,"nodeType":"189","messageId":"209","endLine":37,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":49,"column":69,"nodeType":"197","endLine":49,"endColumn":122},{"ruleId":"187","severity":1,"message":"210","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":32,"column":8,"nodeType":"202","endLine":32,"endColumn":10,"suggestions":"211"},{"ruleId":"195","severity":1,"message":"196","line":59,"column":50,"nodeType":"197","endLine":59,"endColumn":68},{"ruleId":"195","severity":1,"message":"196","line":60,"column":68,"nodeType":"197","endLine":60,"endColumn":114},{"ruleId":"195","severity":1,"message":"196","line":61,"column":69,"nodeType":"197","endLine":61,"endColumn":116},{"ruleId":"195","severity":1,"message":"196","line":62,"column":108,"nodeType":"197","endLine":62,"endColumn":158},{"ruleId":"187","severity":1,"message":"206","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"212","line":15,"column":12,"nodeType":"189","messageId":"190","endLine":15,"endColumn":20},{"ruleId":"187","severity":1,"message":"213","line":15,"column":22,"nodeType":"189","messageId":"190","endLine":15,"endColumn":33},{"ruleId":"187","severity":1,"message":"214","line":26,"column":12,"nodeType":"189","messageId":"190","endLine":26,"endColumn":19},{"ruleId":"187","severity":1,"message":"215","line":26,"column":21,"nodeType":"189","messageId":"190","endLine":26,"endColumn":31},{"ruleId":"187","severity":1,"message":"216","line":33,"column":12,"nodeType":"189","messageId":"190","endLine":33,"endColumn":18},{"ruleId":"187","severity":1,"message":"217","line":33,"column":20,"nodeType":"189","messageId":"190","endLine":33,"endColumn":29},{"ruleId":"207","severity":1,"message":"218","line":157,"column":13,"nodeType":"189","messageId":"209","endLine":157,"endColumn":14},{"ruleId":"207","severity":1,"message":"218","line":222,"column":13,"nodeType":"189","messageId":"209","endLine":222,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":251,"column":8,"nodeType":"202","endLine":251,"endColumn":10,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":561,"column":17,"nodeType":"222","messageId":"223","endLine":567,"endColumn":33},{"ruleId":"207","severity":1,"message":"218","line":75,"column":25,"nodeType":"189","messageId":"209","endLine":75,"endColumn":26},{"ruleId":"200","severity":1,"message":"224","line":83,"column":8,"nodeType":"202","endLine":83,"endColumn":10,"suggestions":"225"},{"ruleId":"207","severity":1,"message":"226","line":118,"column":29,"nodeType":"189","messageId":"209","endLine":118,"endColumn":33},{"ruleId":"187","severity":1,"message":"204","line":147,"column":11,"nodeType":"189","messageId":"190","endLine":147,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":205,"column":53,"nodeType":"197","endLine":205,"endColumn":71},{"ruleId":"195","severity":1,"message":"196","line":206,"column":71,"nodeType":"197","endLine":206,"endColumn":120},{"ruleId":"195","severity":1,"message":"196","line":207,"column":72,"nodeType":"197","endLine":207,"endColumn":122},{"ruleId":"195","severity":1,"message":"196","line":208,"column":81,"nodeType":"197","endLine":208,"endColumn":134},{"ruleId":"195","severity":1,"message":"196","line":223,"column":25,"nodeType":"197","endLine":223,"endColumn":88},{"ruleId":"195","severity":1,"message":"196","line":237,"column":29,"nodeType":"197","endLine":237,"endColumn":85},{"ruleId":"195","severity":1,"message":"196","line":243,"column":45,"nodeType":"197","endLine":243,"endColumn":101},{"ruleId":"195","severity":1,"message":"196","line":246,"column":41,"nodeType":"197","endLine":246,"endColumn":98},{"ruleId":"187","severity":1,"message":"227","line":39,"column":12,"nodeType":"189","messageId":"190","endLine":39,"endColumn":27},{"ruleId":"187","severity":1,"message":"228","line":44,"column":12,"nodeType":"189","messageId":"190","endLine":44,"endColumn":26},{"ruleId":"187","severity":1,"message":"229","line":44,"column":28,"nodeType":"189","messageId":"190","endLine":44,"endColumn":45},{"ruleId":"207","severity":1,"message":"218","line":75,"column":25,"nodeType":"189","messageId":"209","endLine":75,"endColumn":26},{"ruleId":"200","severity":1,"message":"224","line":83,"column":8,"nodeType":"202","endLine":83,"endColumn":10,"suggestions":"230"},{"ruleId":"207","severity":1,"message":"226","line":118,"column":29,"nodeType":"189","messageId":"209","endLine":118,"endColumn":33},{"ruleId":"187","severity":1,"message":"204","line":146,"column":11,"nodeType":"189","messageId":"190","endLine":146,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":196,"column":54,"nodeType":"197","endLine":196,"endColumn":72},{"ruleId":"195","severity":1,"message":"196","line":197,"column":72,"nodeType":"197","endLine":197,"endColumn":122},{"ruleId":"195","severity":1,"message":"196","line":198,"column":73,"nodeType":"197","endLine":198,"endColumn":124},{"ruleId":"195","severity":1,"message":"196","line":199,"column":82,"nodeType":"197","endLine":199,"endColumn":136},{"ruleId":"195","severity":1,"message":"196","line":214,"column":25,"nodeType":"197","endLine":214,"endColumn":90},{"ruleId":"195","severity":1,"message":"196","line":227,"column":29,"nodeType":"197","endLine":227,"endColumn":86},{"ruleId":"195","severity":1,"message":"196","line":233,"column":126,"nodeType":"197","endLine":233,"endColumn":183},{"ruleId":"195","severity":1,"message":"196","line":236,"column":41,"nodeType":"197","endLine":236,"endColumn":99},{"ruleId":"187","severity":1,"message":"206","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"231","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"218","line":80,"column":25,"nodeType":"189","messageId":"209","endLine":80,"endColumn":26},{"ruleId":"200","severity":1,"message":"232","line":89,"column":8,"nodeType":"202","endLine":89,"endColumn":10,"suggestions":"233"},{"ruleId":"207","severity":1,"message":"226","line":127,"column":29,"nodeType":"189","messageId":"209","endLine":127,"endColumn":33},{"ruleId":"187","severity":1,"message":"204","line":169,"column":11,"nodeType":"189","messageId":"190","endLine":169,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":228,"column":55,"nodeType":"197","endLine":228,"endColumn":73},{"ruleId":"195","severity":1,"message":"196","line":229,"column":73,"nodeType":"197","endLine":229,"endColumn":124},{"ruleId":"195","severity":1,"message":"196","line":230,"column":74,"nodeType":"197","endLine":230,"endColumn":126},{"ruleId":"195","severity":1,"message":"196","line":231,"column":83,"nodeType":"197","endLine":231,"endColumn":138},{"ruleId":"195","severity":1,"message":"196","line":263,"column":29,"nodeType":"197","endLine":263,"endColumn":87},{"ruleId":"195","severity":1,"message":"196","line":269,"column":151,"nodeType":"197","endLine":269,"endColumn":314},{"ruleId":"195","severity":1,"message":"196","line":273,"column":41,"nodeType":"197","endLine":273,"endColumn":100},{"ruleId":"187","severity":1,"message":"206","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"231","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"199","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"206","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"231","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"206","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"231","line":1,"column":28,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"196","line":10,"column":17,"nodeType":"197","endLine":10,"endColumn":85},{"ruleId":"195","severity":1,"message":"196","line":14,"column":17,"nodeType":"197","endLine":14,"endColumn":102},{"ruleId":"195","severity":1,"message":"196","line":15,"column":17,"nodeType":"197","endLine":15,"endColumn":114},"no-unused-vars","'MusicPlayer' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'addSongToQueue' is assigned a value but never used.",["235"],"'useEffect' is defined but never used.","no-redeclare","'j' is already defined.","redeclared","'createPlaylistCSS' is defined but never used.",["236"],"'artistID' is assigned a value but never used.","'setArtistID' is assigned a value but never used.","'genreID' is assigned a value but never used.","'setGenreID' is assigned a value but never used.","'songID' is assigned a value but never used.","'setSongID' is assigned a value but never used.","'i' is already defined.",["237"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'dataX', 'iniData', 'navigate', and 'param'. Either include them or remove the dependency array.",["238"],"'temp' is already defined.","'songArtistQueue' is assigned a value but never used.","'previousArtist' is assigned a value but never used.","'setPreviousArtist' is assigned a value but never used.",["239"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dataX', 'id', 'iniData', 'name', and 'navigate'. Either include them or remove the dependency array.",["240"],{"desc":"241","fix":"242"},{"desc":"241","fix":"243"},{"desc":"241","fix":"244"},{"desc":"241","fix":"245"},{"desc":"246","fix":"247"},{"desc":"246","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [navigate]",{"range":"251","text":"252"},{"range":"253","text":"252"},{"range":"254","text":"252"},{"range":"255","text":"252"},"Update the dependencies array to be: [dataX, iniData, navigate, param]",{"range":"256","text":"257"},{"range":"258","text":"257"},"Update the dependencies array to be: [dataX, id, iniData, name, navigate]",{"range":"259","text":"260"},[3008,3010],"[navigate]",[1525,1527],[1291,1293],[7800,7802],[3457,3459],"[dataX, iniData, navigate, param]",[3489,3491],[3778,3780],"[dataX, id, iniData, name, navigate]"]