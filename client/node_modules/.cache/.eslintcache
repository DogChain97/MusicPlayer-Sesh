[{"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\index.js":"1","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\App.js":"2","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\login.js":"4","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\register.js":"5","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\home.js":"6","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genre.js":"7","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\searchBar.js":"8","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\createPlaylist.js":"9","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\songCard.js":"10","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\admin.js":"11","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genreSongs.js":"12","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\artistSongs.js":"13","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicPlayer.js":"14","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\userplaylist.js":"15","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\playlists.js":"16","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\genreCard.js":"17","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicControls.js":"18"},{"size":631,"mtime":1681311977152,"results":"19","hashOfConfig":"20"},{"size":1074,"mtime":1683049524548,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1681311977155,"results":"22","hashOfConfig":"20"},{"size":2491,"mtime":1681973407465,"results":"23","hashOfConfig":"20"},{"size":2755,"mtime":1681311977154,"results":"24","hashOfConfig":"20"},{"size":12885,"mtime":1682589458117,"results":"25","hashOfConfig":"20"},{"size":5230,"mtime":1683051927182,"results":"26","hashOfConfig":"20"},{"size":2079,"mtime":1683051746274,"results":"27","hashOfConfig":"20"},{"size":3822,"mtime":1683051873142,"results":"28","hashOfConfig":"20"},{"size":2118,"mtime":1683051842104,"results":"29","hashOfConfig":"20"},{"size":20053,"mtime":1683049947269,"results":"30","hashOfConfig":"20"},{"size":10513,"mtime":1682590737808,"results":"31","hashOfConfig":"20"},{"size":9978,"mtime":1683051407231,"results":"32","hashOfConfig":"20"},{"size":674,"mtime":1683051483763,"results":"33","hashOfConfig":"20"},{"size":12364,"mtime":1683002958986,"results":"34","hashOfConfig":"20"},{"size":1088,"mtime":1683051592346,"results":"35","hashOfConfig":"20"},{"size":871,"mtime":1683051461927,"results":"36","hashOfConfig":"20"},{"size":875,"mtime":1683051470833,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1iegzw8",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\index.js",[],[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\App.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\login.js",["98","99"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginCSS from './login_registration.module.css';\r\nimport logo from './assets/sesh_white.png';\r\n\r\nfunction Login(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState(''); \r\n    const [passwordType, setPasswordType] = useState('password')\r\n    const [toggle, setToggle] = useState('SHOW')\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    Axios.defaults.withCredentials = true\r\n    const login = () => {\r\n        Axios.post('http://localhost:7000/login', {\r\n        username: username, \r\n        password: password\r\n        }).then((response) => {\r\n            if(response.data.admin){\r\n                navigate('/admin')\r\n            }else{\r\n                if(response.data.message){\r\n                    setLoginStatus(response.data.message);\r\n                }else{\r\n                    navigate(\"/home\")\r\n                    setLoginStatus(\"Welcome \"+response.data[0].u_name);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const togglePasswordType = () => {\r\n        if(passwordType === 'password'){\r\n            setPasswordType('text')\r\n            setToggle('HIDE')\r\n            return;\r\n        }\r\n        setPasswordType('password')\r\n        setToggle('SHOW')\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/login').then((response) => {\r\n            if(response.data.loggedIn == true){\r\n                setLoginStatus(response.data.user[0].u_name)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={loginCSS.card}>\r\n           <h1 className={loginCSS.brand}><img src={logo} />SESH</h1>\r\n           <h2>LOGIN</h2>\r\n            <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={(e)=>{\r\n                setUsername(e.target.value);\r\n            }}/>\r\n            <br />\r\n            <input type={passwordType} placeholder=\"Password\" name=\"password\" onChange={(e)=>{\r\n                setPassword(e.target.value);\r\n            }}/>\r\n            <button className={loginCSS.toggle} onClick={togglePasswordType}>{toggle}</button>\r\n            <br />\r\n            <button onClick={login}>LOGIN</button>\r\n           <p>Don't have an account? <a href='/register'>Register</a></p>\r\n\r\n            <h2>{loginStatus}</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\register.js",["100"],[],"import React,{useState} from 'react';\r\nimport Axios from 'axios';\r\nimport registrationCSS from './login_registration.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nfunction Register(){\r\nconst [username, setUsername] = useState('')\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\nconst [passwordType, setPasswordType] = useState('password')\r\nconst [registerStatus, setRegisterStatus] = useState('')\r\nconst [toggle, setToggle] = useState('SHOW')\r\n\r\nconst register = () => {\r\n    Axios.post('http://localhost:7000/register', {\r\n        username: username, \r\n        email: email, \r\n        password: password\r\n    }).then((response) => {\r\n        console.log(response);\r\n        if(response.data.message){\r\n            setRegisterStatus(response.data.message);\r\n        }else{\r\n            setRegisterStatus(\"Account Create Successfully! Proceed to LOGIN\");\r\n        }\r\n    })\r\n}\r\n\r\nconst togglePasswordType = () => {\r\n    if(passwordType === 'password'){\r\n        setPasswordType('text')\r\n        setToggle('HIDE')\r\n        return;\r\n    }\r\n    setPasswordType('password')\r\n    setToggle('SHOW')\r\n}\r\n\r\nconst renderTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n      Length: 8 characters<br/>Must Include: Atleast 1 capital letter, 1 small letter, 1 digit and 1 *\r\n    </Tooltip>\r\n  );\r\n\r\n    return (\r\n        <div className={registrationCSS.regCard}>\r\n           <h1 className={registrationCSS.brand}><img src={logo} />SESH</h1>\r\n           <h2>REGISTER</h2>\r\n            <input type=\"text\" placeholder='Username' name=\"username\" onChange={(e)=>{\r\n                setUsername(e.target.value);\r\n            }} />\r\n            <br />\r\n            <input type=\"text\" placeholder='Email' name=\"email\" onChange={(e)=>{\r\n                setEmail(e.target.value);\r\n            }}/>\r\n            <br />\r\n            <OverlayTrigger placement=\"left\" delay={{ show: 250, hide: 400 }}  overlay={renderTooltip} >\r\n                <input type={passwordType} placeholder='Password' name=\"password\" onChange={(e)=>{\r\n                    setPassword(e.target.value);\r\n                }}/>\r\n            </OverlayTrigger>\r\n            <button className = {registrationCSS.toggle} onClick={togglePasswordType}>{toggle}</button>\r\n            {/* <span>Length: 8 characters, Must Include: Atleast 1 capital letter, 1 small letter, 1 digit and *</span> */}\r\n            <br />\r\n            <button onClick={register}>REGISTER</button>\r\n           <p>Already have an account? <a href='/'>Login</a></p>\r\n           <h2>{registerStatus}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\home.js",["101","102","103","104"],[],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport homeCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/homeActive.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlist.png';\r\nimport SearchBar from './components/searchBar';\r\nimport SongCard from './components/songCard';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction Home (){\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const [images, setImages] = useState([])\r\n    const [songs, setSongs] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n    const [artists, setArtists] = useState([])\r\n    const [genres, setGenres] = useState([])\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n    const [currentSongImg, setCurrentSongImg] = useState('')\r\n    const [currentSongName, setCurrentSongName] = useState('')\r\n    const [currentSongArtist, setCurrentSongArtist] = useState('')\r\n    const [currentSongUrl, setCurrentSongUrl] = useState('')\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [addedStatus, setAddedStatus] = useState('')\r\n    const [isAlertShown, setIsAlertShown] = useState(false)\r\n    \r\n    // Queue\r\n    const [songQueue, setSongQueue] = useState([])\r\n    const [songImageQueue, setSongImageQueue] = useState([])\r\n    const [songNameQueue, setSongNameQueue] = useState([])\r\n    const [songArtistQueue, setSongArtistQueue] = useState([])\r\n    \r\n    const [previousSong, setPreviousSong] = useState([])\r\n    const [previousImage, setPreviousImage] = useState([])\r\n    const [previousName, setPreviousName] = useState([])\r\n    const [previousArtist, setPreviousArtist] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:7000/home').then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setSongs(response.data.songs)\r\n                setUrls(response.data.urls)\r\n                setArtists(response.data.artists)\r\n                setGenres(response.data.genres)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n\r\n                setSongQueue(response.data.urls)\r\n                setSongImageQueue(response.data.images)\r\n                setSongNameQueue(response.data.songs)\r\n                setSongArtistQueue(response.data.artists)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    // Search Functionality\r\n    const searchArtists = artists.filter((item, index)=>artists.indexOf(item)===index)\r\n    const searchArray = searchArtists.concat(songs)\r\n\r\n    const songClicked = (e) => {\r\n        setIsShown(true);\r\n        setCurrentSongImg(e.target.src);\r\n        setCurrentSongName(e.target.dataset.title)\r\n        setCurrentSongArtist(e.target.dataset.artist)\r\n        setCurrentSongUrl(e.target.dataset.url);\r\n    }\r\n\r\n    const loadPage = (e)=>{\r\n        const clicked = e.target.innerHTML\r\n        console.log(clicked)\r\n        if(artists.includes(clicked)){\r\n            navigate(`/artist/${clicked}`)\r\n        }else if(songs.includes(clicked)){\r\n            var index = songs.indexOf(clicked)\r\n            setIsShown(true);\r\n            setCurrentSongImg(images[index]);\r\n            setCurrentSongArtist(artists[index])\r\n            setCurrentSongName(songs[index])\r\n            setCurrentSongUrl(urls[index]);\r\n        }\r\n    }\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    const addToPlaylist = (e)=>{\r\n        var song = e.target.dataset.title\r\n        var id = e.target.dataset.id\r\n\r\n            Axios.post('http://localhost:7000/addsong',{\r\n                id: id,\r\n                song: song\r\n            }).then((response)=>{\r\n                if(response.data.message){\r\n                    setIsAlertShown(true)\r\n                    setAddedStatus(response.data.message)\r\n\r\n                    setTimeout(()=>{\r\n                        setIsAlertShown(false)\r\n                    },3000)\r\n                }else{\r\n                    console.log(\"failed\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const addSongToQueue = (song)=>{\r\n        setSongQueue([song, ...songQueue]);\r\n        \r\n    }\r\n\r\n    const playNextSong = ()=>{\r\n        if(!songQueue.length){\r\n            setCurrentSongUrl(null)\r\n            return\r\n        }\r\n        const [nextSong, ...restOfQueue] = songQueue\r\n        const [nextImage, ...restOfImage] = songImageQueue\r\n        const [nextName, ...restOfName] = songNameQueue\r\n        const [nextArtist, ...restOfArtist] = songArtistQueue\r\n        setSongQueue(restOfQueue)\r\n        setSongImageQueue(restOfImage)\r\n        setSongNameQueue(restOfName)\r\n        setSongArtistQueue(restOfArtist)\r\n\r\n        setPreviousSong([...previousSong, currentSongUrl])\r\n        setPreviousImage([...previousImage, currentSongImg])\r\n        setPreviousName([...previousName, currentSongName])\r\n        setPreviousArtist([...previousArtist, currentSongArtist])\r\n\r\n        setCurrentSongUrl(nextSong)\r\n        setCurrentSongImg(nextImage)\r\n        setCurrentSongName(nextName)\r\n        setCurrentSongArtist(nextArtist)\r\n    }\r\n\r\n    const playPreviousSong = ()=>{\r\n        if(!previousSong.length){\r\n            return\r\n        }\r\n        const [lastSong, ...restOfPlayed] = previousSong.reverse()\r\n        const [lastImage, ...restOfImage] = previousImage.reverse()\r\n        const [lastName, ...restOfName] = previousName.reverse()\r\n        const [lastArtist, ...restOfArtist] = previousArtist.reverse()\r\n\r\n        setPreviousSong(restOfPlayed.reverse())\r\n        setPreviousImage(restOfImage.reverse())\r\n        setPreviousName(restOfName.reverse())\r\n        setPreviousArtist(restOfArtist.reverse())\r\n\r\n        setSongQueue([lastSong, ...songQueue])\r\n        setSongImageQueue([lastImage, ...songImageQueue])\r\n        setSongNameQueue([lastName, ...songNameQueue])\r\n        setSongArtistQueue([lastArtist, ...songArtistQueue])\r\n\r\n        setCurrentSongUrl(lastSong)\r\n        setCurrentSongImg(lastImage)\r\n        setCurrentSongName(lastName)\r\n        setCurrentSongArtist(lastArtist)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={homeCSS.main}>\r\n            <div className={homeCSS.leftPanel}>\r\n                <h1 className={homeCSS.brand}><img onClick={playNextSong} src={logo} alt='logo'/>SESH</h1>\r\n                <h2 className={homeCSS.tabName}><a className={homeCSS.active} href='/home'><img className={homeCSS.tabs} src={home} alt='home' />Home</a></h2>\r\n                <h2 className={homeCSS.tabName}><a href='/genre'><img className={homeCSS.tabs} src={genre} alt='genre'/>Genre</a></h2>\r\n                <h2 className={homeCSS.tabName}><a href='/createPlaylist'><img className={homeCSS.tabs} src={playlist} alt='create'/>Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={homeCSS.rightPanel}>\r\n                <div className={homeCSS.searchPanel}>\r\n                    <div className={homeCSS.searchPanelConents}>\r\n                        <SearchBar data={searchArray} placeholder=\"What's on your mind? Artists/Songs\" onClick={loadPage}/>\r\n                        {isAlertShown &&\r\n                            <div className={homeCSS.addedAlert}>{addedStatus}</div>\r\n                        }\r\n                        <button onClick={showOptions} className={homeCSS.logout}>{user.charAt(0)}</button>\r\n                        {clickedOptions && \r\n                            <ul className={homeCSS.userOptions}>\r\n                                <li className={homeCSS.userLogout} onClick={logout}>Logout</li>\r\n                            </ul>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div className={homeCSS.homeContentPanel}>\r\n                    \r\n                    <div className={homeCSS.welcomeText}>\r\n                        <h1 onClick={playPreviousSong}>Hello, {user}</h1>\r\n                        <p>Hope you have a good sesh!</p>\r\n                    </div>\r\n                \r\n                    <div>\r\n                        <h3 className={homeCSS.contentTitle}>Top Songs</h3>\r\n                        <Container>\r\n                            <Row >\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[0]} title={songs[0]} artist={artists[0]} genre={genres[0]} url={urls[0]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[9]} title={songs[9]} artist={artists[9]} genre={genres[9]} url={urls[9]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[16]} title={songs[16]} artist={artists[16]} genre={genres[16]} url={urls[16]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[7]} title={songs[7]} artist={artists[7]} genre={genres[7]} url={urls[7]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[11]} title={songs[11]} artist={artists[11]} genre={genres[11]} url={urls[11]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row >\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[26]} title={songs[26]} artist={artists[26]} genre={genres[26]} url={urls[26]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[34]} title={songs[34]} artist={artists[34]} genre={genres[34]} url={urls[34]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[35]} title={songs[35]} artist={artists[35]} genre={genres[35]} url={urls[35]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[21]} title={songs[21]} artist={artists[21]} genre={genres[21]} url={urls[21]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                                <Col className={homeCSS.gridColumn}>\r\n                                    <SongCard img={images[19]} title={songs[19]} artist={artists[19]} genre={genres[19]} url={urls[19]} playlists={playlists} ids={ids} addToPlaylist={addToPlaylist} onClick={songClicked}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>                \r\n                </div>\r\n            </div>   \r\n            {isShown && \r\n              <MusicPlayer image={currentSongImg} name={currentSongName} artist={currentSongArtist} src={currentSongUrl} onEnded={playNextSong} playNext={playNextSong} playPrevious={playPreviousSong}/>\r\n            }       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;",[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genre.js",["105","106","107","108","109"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\searchBar.js",["110","111","112"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\createPlaylist.js",["113","114","115","116","117"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\songCard.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\admin.js",["118"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\genreSongs.js",["119","120","121","122","123","124","125","126","127","128","129","130"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport genreSongsCSS from './home_genre_playlist.module.css';\r\nimport logo from './assets/sesh_white.png';\r\nimport home from './assets/home.png';\r\nimport genre from './assets/menu.png';\r\nimport playlist from './assets/playlistActive.png';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Playlists from './components/playlists';\r\nimport MusicPlayer from './components/musicPlayer';\r\n\r\nfunction GenreSongs (){\r\n    var iniData = []\r\n    var dataX = []\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState('')\r\n    const {param} = useParams();\r\n    const [images, setImages] = useState([])\r\n    const [songs, setSongs] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n    const [artists, setArtists] = useState([])\r\n    const [playlists, setPlaylists] = useState([])\r\n    const [ids, setIds] = useState([])\r\n    const [genreImg, setGenreImg] = useState('')\r\n    const [currentSongImg, setCurrentSongImg] = useState()\r\n    const [currentSongName, setCurrentSongName] = useState('')\r\n    const [currentSongUrl, setCurrentSongUrl] = useState('')\r\n    const [currentSongArtist, setCurrentSongArtist] = useState('')\r\n    const [isShown, setIsShown] = useState(false);\r\n    const [clickedOptions, setClickedOptions] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [asc, setAsc] = useState(true)\r\n\r\n    // Queue\r\n    const [songQueue, setSongQueue] = useState([])\r\n    const [songImageQueue, setSongImageQueue] = useState([])\r\n    const [songNameQueue, setSongNameQueue] = useState([])\r\n    const [songArtistQueue, setSongArtistQueue] = useState([])\r\n    \r\n    const [previousSong, setPreviousSong] = useState([])\r\n    const [previousImage, setPreviousImage] = useState([])\r\n    const [previousName, setPreviousName] = useState([])\r\n    const [previousArtist, setPreviousArtist] = useState([])\r\n\r\n    Axios.defaults.withCredentials = true\r\n    useEffect(() => {\r\n\r\n        Axios.get(`http://localhost:7000/genre/${param}`).then((response) => {\r\n            if(response.data.loggedIn === true){\r\n                setUser(response.data.user[0].u_name)\r\n                setImages(response.data.images)\r\n                setSongs(response.data.songs)\r\n                setUrls(response.data.urls)\r\n                setArtists(response.data.artists)\r\n                setGenreImg(response.data.genreImg)\r\n                setPlaylists(response.data.playlists)\r\n                setIds(response.data.ids)\r\n\r\n                setSongQueue(response.data.urls)\r\n                setSongImageQueue(response.data.images)\r\n                setSongNameQueue(response.data.songs)\r\n                setSongArtistQueue(response.data.artists)\r\n\r\n                for(var i=0;i<response.data.images.length;i++){\r\n                    iniData.push({\r\n                        no: (i+1),\r\n                        img: response.data.images[i],\r\n                        song: response.data.songs[i],\r\n                        url: response.data.urls[i],\r\n                        artist: response.data.artists[i],\r\n                    }\r\n                    )\r\n                }\r\n                for(var i=0;i<iniData.length/2;i++){\r\n                    dataX[i] = iniData[i] \r\n                }\r\n                setData(dataX)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n        for(var i=0;i<images.length;i++){\r\n            dataX.push({\r\n                no: (i+1),\r\n                img: images[i],\r\n                song: songs[i],\r\n                url: urls[i],\r\n                artist: artists[i],\r\n            }\r\n            )\r\n        }\r\n\r\n    const sortS = ()=>{\r\n        var i=0,j\r\n        setAsc(!asc)\r\n\r\n        if(asc === true){\r\n            while(i<dataX.length){\r\n                j=i+1\r\n                while(j<dataX.length){\r\n                    if(dataX[j].song>dataX[i].song){\r\n                        var temp = dataX[i]\r\n                        dataX[i] = dataX[j]\r\n                        dataX[j] = temp\r\n                    }\r\n                    j++\r\n                }\r\n                i++\r\n            }\r\n        }else if(asc === false){\r\n            while(i<dataX.length){\r\n                j=i+1\r\n                while(j<dataX.length){\r\n                    if(dataX[j].song<dataX[i].song){\r\n                        var temp = dataX[i]\r\n                        dataX[i] = dataX[j]\r\n                        dataX[j] = temp\r\n                    }\r\n                    j++\r\n                }\r\n                i++\r\n            }\r\n        }\r\n        setData(dataX)\r\n    }\r\n\r\n    const songClicked = (e) => {\r\n        setIsShown(true);\r\n        setCurrentSongImg(e.target.dataset.img);\r\n        setCurrentSongName(e.target.dataset.name)\r\n        setCurrentSongArtist(e.target.dataset.artist)\r\n        setCurrentSongUrl(e.target.dataset.url);\r\n    }\r\n\r\n    const showOptions = ()=>{\r\n        setClickedOptions(!clickedOptions);\r\n    }\r\n\r\n    const logout = () => {\r\n        Axios.post('http://localhost:7000/logout')\r\n        navigate(\"/\")\r\n    }\r\n\r\n    const addSongToQueue = (song)=>{\r\n        setSongQueue([song, ...songQueue]);\r\n        \r\n    }\r\n\r\n    const playNextSong = ()=>{\r\n        if(!songQueue.length){\r\n            setCurrentSongUrl(null)\r\n            return\r\n        }\r\n        const [nextSong, ...restOfQueue] = songQueue\r\n        const [nextImage, ...restOfImage] = songImageQueue\r\n        const [nextName, ...restOfName] = songNameQueue\r\n        const [nextArtist, ...restOfArtist] = songArtistQueue\r\n        setSongQueue(restOfQueue)\r\n        setSongImageQueue(restOfImage)\r\n        setSongNameQueue(restOfName)\r\n        setSongArtistQueue(restOfArtist)\r\n\r\n        setPreviousSong([...previousSong, currentSongUrl])\r\n        setPreviousImage([...previousImage, currentSongImg])\r\n        setPreviousName([...previousName, currentSongName])\r\n        setPreviousArtist([...previousArtist, currentSongArtist])\r\n\r\n        setCurrentSongUrl(nextSong)\r\n        setCurrentSongImg(nextImage)\r\n        setCurrentSongName(nextName)\r\n        setCurrentSongArtist(nextArtist)\r\n    }\r\n\r\n    const playPreviousSong = ()=>{\r\n        if(!previousSong.length){\r\n            return\r\n        }\r\n        const [lastSong, ...restOfPlayed] = previousSong.reverse()\r\n        const [lastImage, ...restOfImage] = previousImage.reverse()\r\n        const [lastName, ...restOfName] = previousName.reverse()\r\n        const [lastArtist, ...restOfArtist] = previousArtist.reverse()\r\n\r\n        setPreviousSong(restOfPlayed.reverse())\r\n        setPreviousImage(restOfImage.reverse())\r\n        setPreviousName(restOfName.reverse())\r\n        setPreviousArtist(restOfArtist.reverse())\r\n\r\n        setSongQueue([lastSong, ...songQueue])\r\n        setSongImageQueue([lastImage, ...songImageQueue])\r\n        setSongNameQueue([lastName, ...songNameQueue])\r\n        setSongArtistQueue([lastArtist, ...songArtistQueue])\r\n\r\n        setCurrentSongUrl(lastSong)\r\n        setCurrentSongImg(lastImage)\r\n        setCurrentSongName(lastName)\r\n        setCurrentSongArtist(lastArtist)\r\n    }\r\n\r\n    return (\r\n        <div className={genreSongsCSS.main}>\r\n            <div className={genreSongsCSS.leftPanel}>\r\n                <h1 className={genreSongsCSS.brand}><img src={logo} />SESH</h1>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/home'><img className={genreSongsCSS.tabs} src={home} />Home</a></h2>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/genre'><img className={genreSongsCSS.tabs} src={genre} />Genre</a></h2>\r\n                <h2 className={genreSongsCSS.tabName}><a href='/createPlaylist'><img className={genreSongsCSS.tabs} src={playlist} />Create Playlist</a></h2>\r\n                <hr/><br/>\r\n                <Playlists playlists={playlists} ids={ids} />\r\n            </div>\r\n\r\n            <div className={genreSongsCSS.rightPanel}>\r\n                <div className={genreSongsCSS.createPlaylistSearchPanel}>\r\n                    <button onClick={showOptions} className={genreSongsCSS.logout}>{user.charAt(0)}</button>\r\n                    {clickedOptions && \r\n                        <ul className={genreSongsCSS.userOptions}>\r\n                            <li className={genreSongsCSS.userLogout} onClick={logout}>Logout</li>\r\n                        </ul>\r\n                    }\r\n                    <br/>\r\n                    <div className={genreSongsCSS.titleDetails}>\r\n                        <img className={genreSongsCSS.artist_genreImg} src={genreImg}/>\r\n                        <h2 className={genreSongsCSS.artist_genreName}>{param}</h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={genreSongsCSS.createPlaylistContentPanel}>\r\n\r\n                    <table>\r\n                        <tr className={genreSongsCSS.songsHeader}>\r\n                            \r\n                            <th className={genreSongsCSS.no}>#</th>\r\n                            <th>Image</th>\r\n                            <th onClick={sortS}>Song</th>\r\n                            <th>Artist</th>\r\n                            <img className={genreSongsCSS.playSong} src={playlist}/>\r\n                        </tr>\r\n                        {data.map((val,key)=>{\r\n                            return(\r\n                                <tr className={genreSongsCSS.songRow} key={key} data-img={val.img} data-artist={val.artist} data-name={val.song} data-url={val.url} onClick={songClicked}>\r\n                                        <td className={genreSongsCSS.no}>{val.no}</td>\r\n                                        <td><img className={genreSongsCSS.tableImg} src={val.img} /></td>\r\n                                        <td>{val.song}</td>\r\n                                        <td>{val.artist}</td>\r\n                                        <img className={genreSongsCSS.playSong} src={playlist} />     \r\n                                </tr>\r\n                            )\r\n                        })\r\n                        }\r\n                    </table>\r\n\r\n                    \r\n                </div>\r\n            </div>  \r\n            {isShown && \r\n                <MusicPlayer image={currentSongImg} name={currentSongName} artist={currentSongArtist} src={currentSongUrl} onEnded={playNextSong} playNext={playNextSong} playPrevious={playPreviousSong}/>\r\n           \r\n            }          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreSongs;","C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\artistSongs.js",["131","132","133","134","135","136","137","138","139"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicPlayer.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\userplaylist.js",["140","141","142","143","144","145","146","147","148","149","150"],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\playlists.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\genreCard.js",[],[],"C:\\Users\\Mohan\\Desktop\\MusicPlayer_Chainsys\\client\\src\\components\\musicControls.js",["151","152","153"],[],{"ruleId":"154","severity":1,"message":"155","line":47,"column":39,"nodeType":"156","messageId":"157","endLine":47,"endColumn":41},{"ruleId":"158","severity":1,"message":"159","line":55,"column":43,"nodeType":"160","endLine":55,"endColumn":61},{"ruleId":"158","severity":1,"message":"159","line":49,"column":50,"nodeType":"160","endLine":49,"endColumn":68},{"ruleId":"161","severity":1,"message":"162","line":1,"column":38,"nodeType":"163","messageId":"164","endLine":1,"endColumn":44},{"ruleId":"161","severity":1,"message":"165","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":68,"column":8,"nodeType":"168","endLine":68,"endColumn":10,"suggestions":"169"},{"ruleId":"161","severity":1,"message":"170","line":127,"column":11,"nodeType":"163","messageId":"164","endLine":127,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":37,"column":8,"nodeType":"168","endLine":37,"endColumn":10,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"159","line":51,"column":48,"nodeType":"160","endLine":51,"endColumn":66},{"ruleId":"158","severity":1,"message":"159","line":52,"column":66,"nodeType":"160","endLine":52,"endColumn":110},{"ruleId":"158","severity":1,"message":"159","line":53,"column":95,"nodeType":"160","endLine":53,"endColumn":140},{"ruleId":"158","severity":1,"message":"159","line":54,"column":76,"nodeType":"160","endLine":54,"endColumn":124},{"ruleId":"154","severity":1,"message":"155","line":25,"column":25,"nodeType":"156","messageId":"157","endLine":25,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":29,"column":31,"nodeType":"156","messageId":"157","endLine":29,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":49,"column":69,"nodeType":"160","endLine":49,"endColumn":122},{"ruleId":"166","severity":1,"message":"167","line":30,"column":8,"nodeType":"168","endLine":30,"endColumn":10,"suggestions":"172"},{"ruleId":"158","severity":1,"message":"159","line":57,"column":50,"nodeType":"160","endLine":57,"endColumn":68},{"ruleId":"158","severity":1,"message":"159","line":58,"column":68,"nodeType":"160","endLine":58,"endColumn":114},{"ruleId":"158","severity":1,"message":"159","line":59,"column":69,"nodeType":"160","endLine":59,"endColumn":116},{"ruleId":"158","severity":1,"message":"159","line":60,"column":108,"nodeType":"160","endLine":60,"endColumn":158},{"ruleId":"166","severity":1,"message":"167","line":248,"column":8,"nodeType":"168","endLine":248,"endColumn":10,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":75,"column":25,"nodeType":"163","messageId":"176","endLine":75,"endColumn":26},{"ruleId":"166","severity":1,"message":"177","line":83,"column":8,"nodeType":"168","endLine":83,"endColumn":10,"suggestions":"178"},{"ruleId":"174","severity":1,"message":"179","line":118,"column":29,"nodeType":"163","messageId":"176","endLine":118,"endColumn":33},{"ruleId":"161","severity":1,"message":"170","line":147,"column":11,"nodeType":"163","messageId":"164","endLine":147,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":205,"column":53,"nodeType":"160","endLine":205,"endColumn":71},{"ruleId":"158","severity":1,"message":"159","line":206,"column":71,"nodeType":"160","endLine":206,"endColumn":120},{"ruleId":"158","severity":1,"message":"159","line":207,"column":72,"nodeType":"160","endLine":207,"endColumn":122},{"ruleId":"158","severity":1,"message":"159","line":208,"column":81,"nodeType":"160","endLine":208,"endColumn":134},{"ruleId":"158","severity":1,"message":"159","line":223,"column":25,"nodeType":"160","endLine":223,"endColumn":88},{"ruleId":"158","severity":1,"message":"159","line":237,"column":29,"nodeType":"160","endLine":237,"endColumn":85},{"ruleId":"158","severity":1,"message":"159","line":243,"column":45,"nodeType":"160","endLine":243,"endColumn":101},{"ruleId":"158","severity":1,"message":"159","line":246,"column":41,"nodeType":"160","endLine":246,"endColumn":98},{"ruleId":"166","severity":1,"message":"177","line":79,"column":8,"nodeType":"168","endLine":79,"endColumn":10,"suggestions":"180"},{"ruleId":"158","severity":1,"message":"159","line":187,"column":54,"nodeType":"160","endLine":187,"endColumn":72},{"ruleId":"158","severity":1,"message":"159","line":188,"column":72,"nodeType":"160","endLine":188,"endColumn":122},{"ruleId":"158","severity":1,"message":"159","line":189,"column":73,"nodeType":"160","endLine":189,"endColumn":124},{"ruleId":"158","severity":1,"message":"159","line":190,"column":82,"nodeType":"160","endLine":190,"endColumn":136},{"ruleId":"158","severity":1,"message":"159","line":205,"column":25,"nodeType":"160","endLine":205,"endColumn":90},{"ruleId":"158","severity":1,"message":"159","line":218,"column":29,"nodeType":"160","endLine":218,"endColumn":86},{"ruleId":"158","severity":1,"message":"159","line":224,"column":126,"nodeType":"160","endLine":224,"endColumn":183},{"ruleId":"158","severity":1,"message":"159","line":227,"column":41,"nodeType":"160","endLine":227,"endColumn":99},{"ruleId":"174","severity":1,"message":"175","line":79,"column":25,"nodeType":"163","messageId":"176","endLine":79,"endColumn":26},{"ruleId":"166","severity":1,"message":"181","line":88,"column":8,"nodeType":"168","endLine":88,"endColumn":10,"suggestions":"182"},{"ruleId":"174","severity":1,"message":"179","line":126,"column":29,"nodeType":"163","messageId":"176","endLine":126,"endColumn":33},{"ruleId":"161","severity":1,"message":"170","line":168,"column":11,"nodeType":"163","messageId":"164","endLine":168,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":227,"column":55,"nodeType":"160","endLine":227,"endColumn":73},{"ruleId":"158","severity":1,"message":"159","line":228,"column":73,"nodeType":"160","endLine":228,"endColumn":124},{"ruleId":"158","severity":1,"message":"159","line":229,"column":74,"nodeType":"160","endLine":229,"endColumn":126},{"ruleId":"158","severity":1,"message":"159","line":230,"column":83,"nodeType":"160","endLine":230,"endColumn":138},{"ruleId":"158","severity":1,"message":"159","line":262,"column":29,"nodeType":"160","endLine":262,"endColumn":87},{"ruleId":"158","severity":1,"message":"159","line":268,"column":151,"nodeType":"160","endLine":268,"endColumn":314},{"ruleId":"158","severity":1,"message":"159","line":272,"column":41,"nodeType":"160","endLine":272,"endColumn":100},{"ruleId":"158","severity":1,"message":"159","line":10,"column":17,"nodeType":"160","endLine":10,"endColumn":85},{"ruleId":"158","severity":1,"message":"159","line":14,"column":17,"nodeType":"160","endLine":14,"endColumn":102},{"ruleId":"158","severity":1,"message":"159","line":15,"column":17,"nodeType":"160","endLine":15,"endColumn":114},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'addSongToQueue' is assigned a value but never used.",["184"],["185"],["186"],"no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'dataX', 'iniData', 'navigate', and 'param'. Either include them or remove the dependency array.",["187"],"'temp' is already defined.",["188"],"React Hook useEffect has missing dependencies: 'dataX', 'id', 'iniData', 'name', and 'navigate'. Either include them or remove the dependency array.",["189"],{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"190","fix":"193"},{"desc":"190","fix":"194"},{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [navigate]",{"range":"200","text":"201"},{"range":"202","text":"201"},{"range":"203","text":"201"},{"range":"204","text":"201"},"Update the dependencies array to be: [dataX, iniData, navigate, param]",{"range":"205","text":"206"},{"range":"207","text":"206"},"Update the dependencies array to be: [dataX, id, iniData, name, navigate]",{"range":"208","text":"209"},[3008,3010],"[navigate]",[1470,1472],[1176,1178],[7656,7658],[3457,3459],"[dataX, iniData, navigate, param]",[3280,3282],[3742,3744],"[dataX, id, iniData, name, navigate]"]